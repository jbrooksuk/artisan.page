[{"name":"_complete","description":"Internal command to provide shell completion suggestions","synopsis":"_complete [-s|--shell SHELL] [-i|--input INPUT] [-c|--current CURRENT] [-a|--api-version API-VERSION] [-S|--symfony SYMFONY]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"shell","description":"The shell type (\"bash\", \"fish\", \"zsh\")","value_required":true,"value_optional":false},{"name":"input","description":"An array of input tokens (e.g. COMP_WORDS or argv)","value_required":true,"value_optional":false},{"name":"current","description":"The index of the \"input\" array that the cursor is in (e.g. COMP_CWORD)","value_required":true,"value_optional":false},{"name":"api-version","description":"The API version of the completion script","value_required":true,"value_optional":false},{"name":"symfony","description":"deprecated","value_required":true,"value_optional":false}]},{"name":"about","description":"Display basic information about your application","synopsis":"about [--only [ONLY]] [--json]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"only","description":"The section to display","value_required":false,"value_optional":true},{"name":"json","description":"Output the information as JSON","value_required":false,"value_optional":false}]},{"name":"auth:clear-resets","description":"Flush expired password reset tokens","synopsis":"auth:clear-resets [<name>]","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the password broker","default":null,"required":false}],"options":[]},{"name":"cache:clear","description":"Flush the application cache","synopsis":"cache:clear [--tags [TAGS]] [--] [<store>]","definition":{},"aliases":[],"arguments":[{"name":"store","description":"The name of the store you would like to clear","default":null,"required":false}],"options":[{"name":"tags","description":"The cache tags you would like to clear","value_required":false,"value_optional":true}]},{"name":"cache:forget","description":"Remove an item from the cache","synopsis":"cache:forget <key> [<store>]","definition":{},"aliases":[],"arguments":[{"name":"key","description":"The key to remove","default":null,"required":true},{"name":"store","description":"The store to remove the key from","default":null,"required":false}],"options":[]},{"name":"cache:prune-stale-tags","description":"Prune stale cache tags from the cache (Redis only)","synopsis":"cache:prune-stale-tags [<store>]","definition":{},"aliases":[],"arguments":[{"name":"store","description":"The name of the store you would like to prune tags from","default":null,"required":false}],"options":[]},{"name":"cache:table","description":"Create a migration for the cache database table","synopsis":"cache:table","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"channel:list","description":"List all registered private broadcast channels","synopsis":"channel:list","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"clear-compiled","description":"Remove the compiled class file","synopsis":"clear-compiled","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"completion","description":"Dump the shell completion script","synopsis":"completion [--debug] [--] [<shell>]","definition":{},"aliases":[],"arguments":[{"name":"shell","description":"The shell type (e.g. \"bash\"), the value of the \"$SHELL\" env var will be used if this is not given","default":null,"required":false}],"options":[{"name":"debug","description":"Tail the completion debug log","value_required":false,"value_optional":false}]},{"name":"config:cache","description":"Create a cache file for faster configuration loading","synopsis":"config:cache","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"config:clear","description":"Remove the configuration cache file","synopsis":"config:clear","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"config:show","description":"Display all of the values for a given configuration file","synopsis":"config:show <config>","definition":{},"aliases":[],"arguments":[{"name":"config","description":"The configuration file to show","default":null,"required":true}],"options":[]},{"name":"db","description":"Start a new database CLI session","synopsis":"db [--read] [--write] [--] [<connection>]","definition":{},"aliases":[],"arguments":[{"name":"connection","description":"The database connection that should be used","default":null,"required":false}],"options":[{"name":"read","description":"Connect to the read connection","value_required":false,"value_optional":false},{"name":"write","description":"Connect to the write connection","value_required":false,"value_optional":false}]},{"name":"db:monitor","description":"Monitor the number of connections on the specified database","synopsis":"db:monitor [--databases [DATABASES]] [--max [MAX]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"databases","description":"The database connections to monitor","value_required":false,"value_optional":true},{"name":"max","description":"The maximum number of connections that can be open before an event is dispatched","value_required":false,"value_optional":true}]},{"name":"db:seed","description":"Seed the database with records","synopsis":"db:seed [--class [CLASS]] [--database [DATABASE]] [--force] [--] [<class>]","definition":{},"aliases":[],"arguments":[{"name":"class","description":"The class name of the root seeder","default":null,"required":false}],"options":[{"name":"class","description":"The class name of the root seeder","value_required":false,"value_optional":true},{"name":"database","description":"The database connection to seed","value_required":false,"value_optional":true},{"name":"force","description":"Force the operation to run when in production","value_required":false,"value_optional":false}]},{"name":"db:show","description":"Display information about the given database","synopsis":"db:show [--database [DATABASE]] [--json] [--counts] [--views]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection","value_required":false,"value_optional":true},{"name":"json","description":"Output the database information as JSON","value_required":false,"value_optional":false},{"name":"counts","description":"Show the table row count <bg=red;options=bold> Note: This can be slow on large databases <\/>","value_required":false,"value_optional":false},{"name":"views","description":"Show the database views <bg=red;options=bold> Note: This can be slow on large databases <\/>","value_required":false,"value_optional":false}]},{"name":"db:table","description":"Display information about the given database table","synopsis":"db:table [--database [DATABASE]] [--json] [--] [<table>]","definition":{},"aliases":[],"arguments":[{"name":"table","description":"The name of the table","default":null,"required":false}],"options":[{"name":"database","description":"The database connection","value_required":false,"value_optional":true},{"name":"json","description":"Output the table information as JSON","value_required":false,"value_optional":false}]},{"name":"db:wipe","description":"Drop all tables, views, and types","synopsis":"db:wipe [--database [DATABASE]] [--drop-views] [--drop-types] [--force]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection to use","value_required":false,"value_optional":true},{"name":"drop-views","description":"Drop all tables and views","value_required":false,"value_optional":false},{"name":"drop-types","description":"Drop all tables and types (Postgres only)","value_required":false,"value_optional":false},{"name":"force","description":"Force the operation to run when in production","value_required":false,"value_optional":false}]},{"name":"docs","description":"Access the Laravel documentation","synopsis":"docs [<page> [<section>]]","definition":{},"aliases":[],"arguments":[{"name":"page","description":"The documentation page to open","default":null,"required":false},{"name":"section","description":"The section of the page to open","default":null,"required":false}],"options":[]},{"name":"down","description":"Put the application into maintenance \/ demo mode","synopsis":"down [--redirect [REDIRECT]] [--render [RENDER]] [--retry [RETRY]] [--refresh [REFRESH]] [--secret [SECRET]] [--with-secret] [--status [STATUS]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"redirect","description":"The path that users should be redirected to","value_required":false,"value_optional":true},{"name":"render","description":"The view that should be prerendered for display during maintenance mode","value_required":false,"value_optional":true},{"name":"retry","description":"The number of seconds after which the request may be retried","value_required":false,"value_optional":true},{"name":"refresh","description":"The number of seconds after which the browser may refresh","value_required":false,"value_optional":true},{"name":"secret","description":"The secret phrase that may be used to bypass maintenance mode","value_required":false,"value_optional":true},{"name":"with-secret","description":"Generate a random secret phrase that may be used to bypass maintenance mode","value_required":false,"value_optional":false},{"name":"status","description":"The status code that should be used when returning the maintenance mode response","value_required":false,"value_optional":true}]},{"name":"env","description":"Display the current framework environment","synopsis":"env","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"env:decrypt","description":"Decrypt an environment file","synopsis":"env:decrypt [--key [KEY]] [--cipher [CIPHER]] [--env [ENV]] [--force] [--path [PATH]] [--filename [FILENAME]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"key","description":"The encryption key","value_required":false,"value_optional":true},{"name":"cipher","description":"The encryption cipher","value_required":false,"value_optional":true},{"name":"env","description":"The environment to be decrypted","value_required":false,"value_optional":true},{"name":"force","description":"Overwrite the existing environment file","value_required":false,"value_optional":false},{"name":"path","description":"Path to write the decrypted file","value_required":false,"value_optional":true},{"name":"filename","description":"Filename of the decrypted file","value_required":false,"value_optional":true}]},{"name":"env:encrypt","description":"Encrypt an environment file","synopsis":"env:encrypt [--key [KEY]] [--cipher [CIPHER]] [--env [ENV]] [--force]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"key","description":"The encryption key","value_required":false,"value_optional":true},{"name":"cipher","description":"The encryption cipher","value_required":false,"value_optional":true},{"name":"env","description":"The environment to be encrypted","value_required":false,"value_optional":true},{"name":"force","description":"Overwrite the existing encrypted environment file","value_required":false,"value_optional":false}]},{"name":"event:cache","description":"Discover and cache the application's events and listeners","synopsis":"event:cache","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"event:clear","description":"Clear all cached events and listeners","synopsis":"event:clear","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"event:generate","description":"Generate the missing events and listeners based on registration","synopsis":"event:generate","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"event:list","description":"List the application's events and listeners","synopsis":"event:list [--event [EVENT]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"event","description":"Filter the events by name","value_required":false,"value_optional":true}]},{"name":"help","description":"Display help for a command","synopsis":"help [--format FORMAT] [--raw] [--] [<command_name>]","definition":{},"aliases":[],"arguments":[{"name":"command_name","description":"The command name","default":"help","required":false}],"options":[{"name":"format","description":"The output format (txt, xml, json, or md)","value_required":true,"value_optional":false},{"name":"raw","description":"To output raw command help","value_required":false,"value_optional":false}]},{"name":"inspire","description":"Display an inspiring quote","synopsis":"inspire","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"key:generate","description":"Set the application key","synopsis":"key:generate [--show] [--force]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"show","description":"Display the key instead of modifying files","value_required":false,"value_optional":false},{"name":"force","description":"Force the operation to run when in production","value_required":false,"value_optional":false}]},{"name":"lang:publish","description":"Publish all language files that are available for customization","synopsis":"lang:publish [--existing] [--force]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"existing","description":"Publish and overwrite only the files that have already been published","value_required":false,"value_optional":false},{"name":"force","description":"Overwrite any existing files","value_required":false,"value_optional":false}]},{"name":"list","description":"List commands","synopsis":"list [--raw] [--format FORMAT] [--short] [--] [<namespace>]","definition":{},"aliases":[],"arguments":[{"name":"namespace","description":"The namespace name","default":null,"required":false}],"options":[{"name":"raw","description":"To output raw command list","value_required":false,"value_optional":false},{"name":"format","description":"The output format (txt, xml, json, or md)","value_required":true,"value_optional":false},{"name":"short","description":"To skip describing commands' arguments","value_required":false,"value_optional":false}]},{"name":"make:cast","description":"Create a new custom Eloquent cast class","synopsis":"make:cast [-f|--force] [--inbound] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the cast","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the cast already exists","value_required":false,"value_optional":false},{"name":"inbound","description":"Generate an inbound cast class","value_required":false,"value_optional":false}]},{"name":"make:channel","description":"Create a new channel class","synopsis":"make:channel [-f|--force] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the channel","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the channel already exists","value_required":false,"value_optional":false}]},{"name":"make:command","description":"Create a new Artisan command","synopsis":"make:command [-f|--force] [--command [COMMAND]] [--test] [--pest] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the command","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the console command already exists","value_required":false,"value_optional":false},{"name":"command","description":"The terminal command that will be used to invoke the class","value_required":false,"value_optional":true},{"name":"test","description":"Generate an accompanying PHPUnit test for the Console command","value_required":false,"value_optional":false},{"name":"pest","description":"Generate an accompanying Pest test for the Console command","value_required":false,"value_optional":false}]},{"name":"make:component","description":"Create a new view component class","synopsis":"make:component [-f|--force] [--inline] [--view] [--test] [--pest] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the component","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the component already exists","value_required":false,"value_optional":false},{"name":"inline","description":"Create a component that renders an inline view","value_required":false,"value_optional":false},{"name":"view","description":"Create an anonymous component with only a view","value_required":false,"value_optional":false},{"name":"test","description":"Generate an accompanying PHPUnit test for the Component","value_required":false,"value_optional":false},{"name":"pest","description":"Generate an accompanying Pest test for the Component","value_required":false,"value_optional":false}]},{"name":"make:controller","description":"Create a new controller class","synopsis":"make:controller [--api] [--type TYPE] [--force] [-i|--invokable] [-m|--model [MODEL]] [-p|--parent [PARENT]] [-r|--resource] [-R|--requests] [-s|--singleton] [--creatable] [--test] [--pest] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the controller","default":null,"required":true}],"options":[{"name":"api","description":"Exclude the create and edit methods from the controller","value_required":false,"value_optional":false},{"name":"type","description":"Manually specify the controller stub file to use","value_required":true,"value_optional":false},{"name":"force","description":"Create the class even if the controller already exists","value_required":false,"value_optional":false},{"name":"invokable","description":"Generate a single method, invokable controller class","value_required":false,"value_optional":false},{"name":"model","description":"Generate a resource controller for the given model","value_required":false,"value_optional":true},{"name":"parent","description":"Generate a nested resource controller class","value_required":false,"value_optional":true},{"name":"resource","description":"Generate a resource controller class","value_required":false,"value_optional":false},{"name":"requests","description":"Generate FormRequest classes for store and update","value_required":false,"value_optional":false},{"name":"singleton","description":"Generate a singleton resource controller class","value_required":false,"value_optional":false},{"name":"creatable","description":"Indicate that a singleton resource should be creatable","value_required":false,"value_optional":false},{"name":"test","description":"Generate an accompanying PHPUnit test for the Controller","value_required":false,"value_optional":false},{"name":"pest","description":"Generate an accompanying Pest test for the Controller","value_required":false,"value_optional":false}]},{"name":"make:event","description":"Create a new event class","synopsis":"make:event [-f|--force] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the event","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the event already exists","value_required":false,"value_optional":false}]},{"name":"make:exception","description":"Create a new custom exception class","synopsis":"make:exception [-f|--force] [--render] [--report] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the exception","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the exception already exists","value_required":false,"value_optional":false},{"name":"render","description":"Create the exception with an empty render method","value_required":false,"value_optional":false},{"name":"report","description":"Create the exception with an empty report method","value_required":false,"value_optional":false}]},{"name":"make:factory","description":"Create a new model factory","synopsis":"make:factory [-m|--model [MODEL]] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the factory","default":null,"required":true}],"options":[{"name":"model","description":"The name of the model","value_required":false,"value_optional":true}]},{"name":"make:job","description":"Create a new job class","synopsis":"make:job [-f|--force] [--sync] [--test] [--pest] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the job","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the job already exists","value_required":false,"value_optional":false},{"name":"sync","description":"Indicates that job should be synchronous","value_required":false,"value_optional":false},{"name":"test","description":"Generate an accompanying PHPUnit test for the Job","value_required":false,"value_optional":false},{"name":"pest","description":"Generate an accompanying Pest test for the Job","value_required":false,"value_optional":false}]},{"name":"make:listener","description":"Create a new event listener class","synopsis":"make:listener [-e|--event [EVENT]] [-f|--force] [--queued] [--test] [--pest] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the listener","default":null,"required":true}],"options":[{"name":"event","description":"The event class being listened for","value_required":false,"value_optional":true},{"name":"force","description":"Create the class even if the listener already exists","value_required":false,"value_optional":false},{"name":"queued","description":"Indicates the event listener should be queued","value_required":false,"value_optional":false},{"name":"test","description":"Generate an accompanying PHPUnit test for the Listener","value_required":false,"value_optional":false},{"name":"pest","description":"Generate an accompanying Pest test for the Listener","value_required":false,"value_optional":false}]},{"name":"make:mail","description":"Create a new email class","synopsis":"make:mail [-f|--force] [-m|--markdown [MARKDOWN]] [--test] [--pest] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the mailable","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the mailable already exists","value_required":false,"value_optional":false},{"name":"markdown","description":"Create a new Markdown template for the mailable","value_required":false,"value_optional":true},{"name":"test","description":"Generate an accompanying PHPUnit test for the Mailable","value_required":false,"value_optional":false},{"name":"pest","description":"Generate an accompanying Pest test for the Mailable","value_required":false,"value_optional":false}]},{"name":"make:middleware","description":"Create a new middleware class","synopsis":"make:middleware [--test] [--pest] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the middleware","default":null,"required":true}],"options":[{"name":"test","description":"Generate an accompanying PHPUnit test for the Middleware","value_required":false,"value_optional":false},{"name":"pest","description":"Generate an accompanying Pest test for the Middleware","value_required":false,"value_optional":false}]},{"name":"make:migration","description":"Create a new migration file","synopsis":"make:migration [--create [CREATE]] [--table [TABLE]] [--path [PATH]] [--realpath] [--fullpath] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the migration","default":null,"required":true}],"options":[{"name":"create","description":"The table to be created","value_required":false,"value_optional":true},{"name":"table","description":"The table to migrate","value_required":false,"value_optional":true},{"name":"path","description":"The location where the migration file should be created","value_required":false,"value_optional":true},{"name":"realpath","description":"Indicate any provided migration file paths are pre-resolved absolute paths","value_required":false,"value_optional":false},{"name":"fullpath","description":"Output the full path of the migration (Deprecated)","value_required":false,"value_optional":false}]},{"name":"make:model","description":"Create a new Eloquent model class","synopsis":"make:model [-a|--all] [-c|--controller] [-f|--factory] [--force] [-m|--migration] [--morph-pivot] [--policy] [-s|--seed] [-p|--pivot] [-r|--resource] [--api] [-R|--requests] [--test] [--pest] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the model","default":null,"required":true}],"options":[{"name":"all","description":"Generate a migration, seeder, factory, policy, resource controller, and form request classes for the model","value_required":false,"value_optional":false},{"name":"controller","description":"Create a new controller for the model","value_required":false,"value_optional":false},{"name":"factory","description":"Create a new factory for the model","value_required":false,"value_optional":false},{"name":"force","description":"Create the class even if the model already exists","value_required":false,"value_optional":false},{"name":"migration","description":"Create a new migration file for the model","value_required":false,"value_optional":false},{"name":"morph-pivot","description":"Indicates if the generated model should be a custom polymorphic intermediate table model","value_required":false,"value_optional":false},{"name":"policy","description":"Create a new policy for the model","value_required":false,"value_optional":false},{"name":"seed","description":"Create a new seeder for the model","value_required":false,"value_optional":false},{"name":"pivot","description":"Indicates if the generated model should be a custom intermediate table model","value_required":false,"value_optional":false},{"name":"resource","description":"Indicates if the generated controller should be a resource controller","value_required":false,"value_optional":false},{"name":"api","description":"Indicates if the generated controller should be an API resource controller","value_required":false,"value_optional":false},{"name":"requests","description":"Create new form request classes and use them in the resource controller","value_required":false,"value_optional":false},{"name":"test","description":"Generate an accompanying PHPUnit test for the Model","value_required":false,"value_optional":false},{"name":"pest","description":"Generate an accompanying Pest test for the Model","value_required":false,"value_optional":false}]},{"name":"make:notification","description":"Create a new notification class","synopsis":"make:notification [-f|--force] [-m|--markdown [MARKDOWN]] [--test] [--pest] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the notification","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the notification already exists","value_required":false,"value_optional":false},{"name":"markdown","description":"Create a new Markdown template for the notification","value_required":false,"value_optional":true},{"name":"test","description":"Generate an accompanying PHPUnit test for the Notification","value_required":false,"value_optional":false},{"name":"pest","description":"Generate an accompanying Pest test for the Notification","value_required":false,"value_optional":false}]},{"name":"make:observer","description":"Create a new observer class","synopsis":"make:observer [-f|--force] [-m|--model [MODEL]] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the observer","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the observer already exists","value_required":false,"value_optional":false},{"name":"model","description":"The model that the observer applies to","value_required":false,"value_optional":true}]},{"name":"make:policy","description":"Create a new policy class","synopsis":"make:policy [-f|--force] [-m|--model [MODEL]] [-g|--guard [GUARD]] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the policy","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the policy already exists","value_required":false,"value_optional":false},{"name":"model","description":"The model that the policy applies to","value_required":false,"value_optional":true},{"name":"guard","description":"The guard that the policy relies on","value_required":false,"value_optional":true}]},{"name":"make:provider","description":"Create a new service provider class","synopsis":"make:provider [-f|--force] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the provider","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the provider already exists","value_required":false,"value_optional":false}]},{"name":"make:request","description":"Create a new form request class","synopsis":"make:request [-f|--force] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the request","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the request already exists","value_required":false,"value_optional":false}]},{"name":"make:resource","description":"Create a new resource","synopsis":"make:resource [-f|--force] [-c|--collection] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the resource","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the resource already exists","value_required":false,"value_optional":false},{"name":"collection","description":"Create a resource collection","value_required":false,"value_optional":false}]},{"name":"make:rule","description":"Create a new validation rule","synopsis":"make:rule [-f|--force] [-i|--implicit] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the rule","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the rule already exists","value_required":false,"value_optional":false},{"name":"implicit","description":"Generate an implicit rule","value_required":false,"value_optional":false}]},{"name":"make:scope","description":"Create a new scope class","synopsis":"make:scope [-f|--force] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the scope","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the scope already exists","value_required":false,"value_optional":false}]},{"name":"make:seeder","description":"Create a new seeder class","synopsis":"make:seeder <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the seeder","default":null,"required":true}],"options":[]},{"name":"make:test","description":"Create a new test class","synopsis":"make:test [-f|--force] [-u|--unit] [-p|--pest] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the test","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the test already exists","value_required":false,"value_optional":false},{"name":"unit","description":"Create a unit test","value_required":false,"value_optional":false},{"name":"pest","description":"Create a Pest test","value_required":false,"value_optional":false}]},{"name":"make:view","description":"Create a new view","synopsis":"make:view [--extension [EXTENSION]] [-f|--force] [--test] [--pest] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the view","default":null,"required":true}],"options":[{"name":"extension","description":"The extension of the generated view","value_required":false,"value_optional":true},{"name":"force","description":"Create the view even if the view already exists","value_required":false,"value_optional":false},{"name":"test","description":"Generate an accompanying PHPUnit test for the View","value_required":false,"value_optional":false},{"name":"pest","description":"Generate an accompanying Pest test for the View","value_required":false,"value_optional":false}]},{"name":"migrate","description":"Run the database migrations","synopsis":"migrate [--database [DATABASE]] [--force] [--path [PATH]] [--realpath] [--schema-path [SCHEMA-PATH]] [--pretend] [--seed] [--seeder [SEEDER]] [--step] [--isolated [ISOLATED]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection to use","value_required":false,"value_optional":true},{"name":"force","description":"Force the operation to run when in production","value_required":false,"value_optional":false},{"name":"path","description":"The path(s) to the migrations files to be executed","value_required":false,"value_optional":true},{"name":"realpath","description":"Indicate any provided migration file paths are pre-resolved absolute paths","value_required":false,"value_optional":false},{"name":"schema-path","description":"The path to a schema dump file","value_required":false,"value_optional":true},{"name":"pretend","description":"Dump the SQL queries that would be run","value_required":false,"value_optional":false},{"name":"seed","description":"Indicates if the seed task should be re-run","value_required":false,"value_optional":false},{"name":"seeder","description":"The class name of the root seeder","value_required":false,"value_optional":true},{"name":"step","description":"Force the migrations to be run so they can be rolled back individually","value_required":false,"value_optional":false},{"name":"isolated","description":"Do not run the command if another instance of the command is already running","value_required":false,"value_optional":true}]},{"name":"migrate:fresh","description":"Drop all tables and re-run all migrations","synopsis":"migrate:fresh [--database [DATABASE]] [--drop-views] [--drop-types] [--force] [--path [PATH]] [--realpath] [--schema-path [SCHEMA-PATH]] [--seed] [--seeder [SEEDER]] [--step]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection to use","value_required":false,"value_optional":true},{"name":"drop-views","description":"Drop all tables and views","value_required":false,"value_optional":false},{"name":"drop-types","description":"Drop all tables and types (Postgres only)","value_required":false,"value_optional":false},{"name":"force","description":"Force the operation to run when in production","value_required":false,"value_optional":false},{"name":"path","description":"The path(s) to the migrations files to be executed","value_required":false,"value_optional":true},{"name":"realpath","description":"Indicate any provided migration file paths are pre-resolved absolute paths","value_required":false,"value_optional":false},{"name":"schema-path","description":"The path to a schema dump file","value_required":false,"value_optional":true},{"name":"seed","description":"Indicates if the seed task should be re-run","value_required":false,"value_optional":false},{"name":"seeder","description":"The class name of the root seeder","value_required":false,"value_optional":true},{"name":"step","description":"Force the migrations to be run so they can be rolled back individually","value_required":false,"value_optional":false}]},{"name":"migrate:install","description":"Create the migration repository","synopsis":"migrate:install [--database [DATABASE]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection to use","value_required":false,"value_optional":true}]},{"name":"migrate:refresh","description":"Reset and re-run all migrations","synopsis":"migrate:refresh [--database [DATABASE]] [--force] [--path [PATH]] [--realpath] [--seed] [--seeder [SEEDER]] [--step [STEP]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection to use","value_required":false,"value_optional":true},{"name":"force","description":"Force the operation to run when in production","value_required":false,"value_optional":false},{"name":"path","description":"The path(s) to the migrations files to be executed","value_required":false,"value_optional":true},{"name":"realpath","description":"Indicate any provided migration file paths are pre-resolved absolute paths","value_required":false,"value_optional":false},{"name":"seed","description":"Indicates if the seed task should be re-run","value_required":false,"value_optional":false},{"name":"seeder","description":"The class name of the root seeder","value_required":false,"value_optional":true},{"name":"step","description":"The number of migrations to be reverted & re-run","value_required":false,"value_optional":true}]},{"name":"migrate:reset","description":"Rollback all database migrations","synopsis":"migrate:reset [--database [DATABASE]] [--force] [--path [PATH]] [--realpath] [--pretend]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection to use","value_required":false,"value_optional":true},{"name":"force","description":"Force the operation to run when in production","value_required":false,"value_optional":false},{"name":"path","description":"The path(s) to the migrations files to be executed","value_required":false,"value_optional":true},{"name":"realpath","description":"Indicate any provided migration file paths are pre-resolved absolute paths","value_required":false,"value_optional":false},{"name":"pretend","description":"Dump the SQL queries that would be run","value_required":false,"value_optional":false}]},{"name":"migrate:rollback","description":"Rollback the last database migration","synopsis":"migrate:rollback [--database [DATABASE]] [--force] [--path [PATH]] [--realpath] [--pretend] [--step [STEP]] [--batch BATCH]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection to use","value_required":false,"value_optional":true},{"name":"force","description":"Force the operation to run when in production","value_required":false,"value_optional":false},{"name":"path","description":"The path(s) to the migrations files to be executed","value_required":false,"value_optional":true},{"name":"realpath","description":"Indicate any provided migration file paths are pre-resolved absolute paths","value_required":false,"value_optional":false},{"name":"pretend","description":"Dump the SQL queries that would be run","value_required":false,"value_optional":false},{"name":"step","description":"The number of migrations to be reverted","value_required":false,"value_optional":true},{"name":"batch","description":"The batch of migrations (identified by their batch number) to be reverted","value_required":true,"value_optional":false}]},{"name":"migrate:status","description":"Show the status of each migration","synopsis":"migrate:status [--database [DATABASE]] [--pending] [--path [PATH]] [--realpath]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection to use","value_required":false,"value_optional":true},{"name":"pending","description":"Only list pending migrations","value_required":false,"value_optional":false},{"name":"path","description":"The path(s) to the migrations files to use","value_required":false,"value_optional":true},{"name":"realpath","description":"Indicate any provided migration file paths are pre-resolved absolute paths","value_required":false,"value_optional":false}]},{"name":"model:prune","description":"Prune models that are no longer needed","synopsis":"model:prune [--model [MODEL]] [--except [EXCEPT]] [--path [PATH]] [--chunk [CHUNK]] [--pretend]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"model","description":"Class names of the models to be pruned","value_required":false,"value_optional":true},{"name":"except","description":"Class names of the models to be excluded from pruning","value_required":false,"value_optional":true},{"name":"path","description":"Absolute path(s) to directories where models are located","value_required":false,"value_optional":true},{"name":"chunk","description":"The number of models to retrieve per chunk of models to be deleted","value_required":false,"value_optional":true},{"name":"pretend","description":"Display the number of prunable records found instead of deleting them","value_required":false,"value_optional":false}]},{"name":"model:show","description":"Show information about an Eloquent model","synopsis":"model:show [--database [DATABASE]] [--json] [--] <model>","definition":{},"aliases":[],"arguments":[{"name":"model","description":"The model to show","default":null,"required":true}],"options":[{"name":"database","description":"The database connection to use","value_required":false,"value_optional":true},{"name":"json","description":"Output the model as JSON","value_required":false,"value_optional":false}]},{"name":"notifications:table","description":"Create a migration for the notifications table","synopsis":"notifications:table","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"optimize","description":"Cache the framework bootstrap files","synopsis":"optimize","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"optimize:clear","description":"Remove the cached bootstrap files","synopsis":"optimize:clear","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"package:discover","description":"Rebuild the cached package manifest","synopsis":"package:discover","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"queue:batches-table","description":"Create a migration for the batches database table","synopsis":"queue:batches-table","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"queue:clear","description":"Delete all of the jobs from the specified queue","synopsis":"queue:clear [--queue [QUEUE]] [--force] [--] [<connection>]","definition":{},"aliases":[],"arguments":[{"name":"connection","description":"The name of the queue connection to clear","default":null,"required":false}],"options":[{"name":"queue","description":"The name of the queue to clear","value_required":false,"value_optional":true},{"name":"force","description":"Force the operation to run when in production","value_required":false,"value_optional":false}]},{"name":"queue:failed","description":"List all of the failed queue jobs","synopsis":"queue:failed","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"queue:failed-table","description":"Create a migration for the failed queue jobs database table","synopsis":"queue:failed-table","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"queue:flush","description":"Flush all of the failed queue jobs","synopsis":"queue:flush [--hours [HOURS]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"hours","description":"The number of hours to retain failed job data","value_required":false,"value_optional":true}]},{"name":"queue:forget","description":"Delete a failed queue job","synopsis":"queue:forget <id>","definition":{},"aliases":[],"arguments":[{"name":"id","description":"The ID of the failed job","default":null,"required":true}],"options":[]},{"name":"queue:listen","description":"Listen to a given queue","synopsis":"queue:listen [--name [NAME]] [--delay [DELAY]] [--backoff [BACKOFF]] [--force] [--memory [MEMORY]] [--queue [QUEUE]] [--sleep [SLEEP]] [--rest [REST]] [--timeout [TIMEOUT]] [--tries [TRIES]] [--] [<connection>]","definition":{},"aliases":[],"arguments":[{"name":"connection","description":"The name of connection","default":null,"required":false}],"options":[{"name":"name","description":"The name of the worker","value_required":false,"value_optional":true},{"name":"delay","description":"The number of seconds to delay failed jobs (Deprecated)","value_required":false,"value_optional":true},{"name":"backoff","description":"The number of seconds to wait before retrying a job that encountered an uncaught exception","value_required":false,"value_optional":true},{"name":"force","description":"Force the worker to run even in maintenance mode","value_required":false,"value_optional":false},{"name":"memory","description":"The memory limit in megabytes","value_required":false,"value_optional":true},{"name":"queue","description":"The queue to listen on","value_required":false,"value_optional":true},{"name":"sleep","description":"Number of seconds to sleep when no job is available","value_required":false,"value_optional":true},{"name":"rest","description":"Number of seconds to rest between jobs","value_required":false,"value_optional":true},{"name":"timeout","description":"The number of seconds a child process can run","value_required":false,"value_optional":true},{"name":"tries","description":"Number of times to attempt a job before logging it failed","value_required":false,"value_optional":true}]},{"name":"queue:monitor","description":"Monitor the size of the specified queues","synopsis":"queue:monitor [--max [MAX]] [--] <queues>","definition":{},"aliases":[],"arguments":[{"name":"queues","description":"The names of the queues to monitor","default":null,"required":true}],"options":[{"name":"max","description":"The maximum number of jobs that can be on the queue before an event is dispatched","value_required":false,"value_optional":true}]},{"name":"queue:prune-batches","description":"Prune stale entries from the batches database","synopsis":"queue:prune-batches [--hours [HOURS]] [--unfinished [UNFINISHED]] [--cancelled [CANCELLED]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"hours","description":"The number of hours to retain batch data","value_required":false,"value_optional":true},{"name":"unfinished","description":"The number of hours to retain unfinished batch data","value_required":false,"value_optional":true},{"name":"cancelled","description":"The number of hours to retain cancelled batch data","value_required":false,"value_optional":true}]},{"name":"queue:prune-failed","description":"Prune stale entries from the failed jobs table","synopsis":"queue:prune-failed [--hours [HOURS]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"hours","description":"The number of hours to retain failed jobs data","value_required":false,"value_optional":true}]},{"name":"queue:restart","description":"Restart queue worker daemons after their current job","synopsis":"queue:restart","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"queue:retry","description":"Retry a failed queue job","synopsis":"queue:retry [--queue [QUEUE]] [--range [RANGE]] [--] [<id>...]","definition":{},"aliases":[],"arguments":[{"name":"id","description":"The ID of the failed job or \"all\" to retry all jobs","default":[],"required":false}],"options":[{"name":"queue","description":"Retry all of the failed jobs for the specified queue","value_required":false,"value_optional":true},{"name":"range","description":"Range of job IDs (numeric) to be retried (e.g. 1-5)","value_required":false,"value_optional":true}]},{"name":"queue:retry-batch","description":"Retry the failed jobs for a batch","synopsis":"queue:retry-batch [--isolated [ISOLATED]] [--] <id>","definition":{},"aliases":[],"arguments":[{"name":"id","description":"The ID of the batch whose failed jobs should be retried","default":null,"required":true}],"options":[{"name":"isolated","description":"Do not run the command if another instance of the command is already running","value_required":false,"value_optional":true}]},{"name":"queue:table","description":"Create a migration for the queue jobs database table","synopsis":"queue:table","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"queue:work","description":"Start processing jobs on the queue as a daemon","synopsis":"queue:work [--name [NAME]] [--queue [QUEUE]] [--daemon] [--once] [--stop-when-empty] [--delay [DELAY]] [--backoff [BACKOFF]] [--max-jobs [MAX-JOBS]] [--max-time [MAX-TIME]] [--force] [--memory [MEMORY]] [--sleep [SLEEP]] [--rest [REST]] [--timeout [TIMEOUT]] [--tries [TRIES]] [--] [<connection>]","definition":{},"aliases":[],"arguments":[{"name":"connection","description":"The name of the queue connection to work","default":null,"required":false}],"options":[{"name":"name","description":"The name of the worker","value_required":false,"value_optional":true},{"name":"queue","description":"The names of the queues to work","value_required":false,"value_optional":true},{"name":"daemon","description":"Run the worker in daemon mode (Deprecated)","value_required":false,"value_optional":false},{"name":"once","description":"Only process the next job on the queue","value_required":false,"value_optional":false},{"name":"stop-when-empty","description":"Stop when the queue is empty","value_required":false,"value_optional":false},{"name":"delay","description":"The number of seconds to delay failed jobs (Deprecated)","value_required":false,"value_optional":true},{"name":"backoff","description":"The number of seconds to wait before retrying a job that encountered an uncaught exception","value_required":false,"value_optional":true},{"name":"max-jobs","description":"The number of jobs to process before stopping","value_required":false,"value_optional":true},{"name":"max-time","description":"The maximum number of seconds the worker should run","value_required":false,"value_optional":true},{"name":"force","description":"Force the worker to run even in maintenance mode","value_required":false,"value_optional":false},{"name":"memory","description":"The memory limit in megabytes","value_required":false,"value_optional":true},{"name":"sleep","description":"Number of seconds to sleep when no job is available","value_required":false,"value_optional":true},{"name":"rest","description":"Number of seconds to rest between jobs","value_required":false,"value_optional":true},{"name":"timeout","description":"The number of seconds a child process can run","value_required":false,"value_optional":true},{"name":"tries","description":"Number of times to attempt a job before logging it failed","value_required":false,"value_optional":true}]},{"name":"route:cache","description":"Create a route cache file for faster route registration","synopsis":"route:cache","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"route:clear","description":"Remove the route cache file","synopsis":"route:clear","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"route:list","description":"List all registered routes","synopsis":"route:list [--json] [--method [METHOD]] [--name [NAME]] [--domain [DOMAIN]] [--path [PATH]] [--except-path [EXCEPT-PATH]] [-r|--reverse] [--sort [SORT]] [--except-vendor] [--only-vendor]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"json","description":"Output the route list as JSON","value_required":false,"value_optional":false},{"name":"method","description":"Filter the routes by method","value_required":false,"value_optional":true},{"name":"name","description":"Filter the routes by name","value_required":false,"value_optional":true},{"name":"domain","description":"Filter the routes by domain","value_required":false,"value_optional":true},{"name":"path","description":"Only show routes matching the given path pattern","value_required":false,"value_optional":true},{"name":"except-path","description":"Do not display the routes matching the given path pattern","value_required":false,"value_optional":true},{"name":"reverse","description":"Reverse the ordering of the routes","value_required":false,"value_optional":false},{"name":"sort","description":"The column (domain, method, uri, name, action, middleware) to sort by","value_required":false,"value_optional":true},{"name":"except-vendor","description":"Do not display routes defined by vendor packages","value_required":false,"value_optional":false},{"name":"only-vendor","description":"Only display routes defined by vendor packages","value_required":false,"value_optional":false}]},{"name":"sail:add","description":"Add a service to an existing Sail installation","synopsis":"sail:add [<services>]","definition":{},"aliases":[],"arguments":[{"name":"services","description":"The services that should be added","default":null,"required":false}],"options":[]},{"name":"sail:install","description":"Install Laravel Sail's default Docker Compose file","synopsis":"sail:install [--with [WITH]] [--devcontainer]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"with","description":"The services that should be included in the installation","value_required":false,"value_optional":true},{"name":"devcontainer","description":"Create a .devcontainer configuration directory","value_required":false,"value_optional":false}]},{"name":"sail:publish","description":"Publish the Laravel Sail Docker files","synopsis":"sail:publish","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"sanctum:prune-expired","description":"Prune tokens expired for more than specified number of hours","synopsis":"sanctum:prune-expired [--hours [HOURS]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"hours","description":"The number of hours to retain expired Sanctum tokens","value_required":false,"value_optional":true}]},{"name":"schedule:clear-cache","description":"Delete the cached mutex files created by scheduler","synopsis":"schedule:clear-cache","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"schedule:finish","description":"Handle the completion of a scheduled command","synopsis":"schedule:finish <id> [<code>]","definition":{},"aliases":[],"arguments":[{"name":"id","description":"","default":null,"required":true},{"name":"code","description":"","default":"0","required":false}],"options":[]},{"name":"schedule:interrupt","description":"Interrupt the current schedule run","synopsis":"schedule:interrupt","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"schedule:list","description":"List all scheduled tasks","synopsis":"schedule:list [--timezone [TIMEZONE]] [--next]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"timezone","description":"The timezone that times should be displayed in","value_required":false,"value_optional":true},{"name":"next","description":"Sort the listed tasks by their next due date","value_required":false,"value_optional":false}]},{"name":"schedule:run","description":"Run the scheduled commands","synopsis":"schedule:run","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"schedule:test","description":"Run a scheduled command","synopsis":"schedule:test [--name [NAME]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"name","description":"The name of the scheduled command to run","value_required":false,"value_optional":true}]},{"name":"schedule:work","description":"Start the schedule worker","synopsis":"schedule:work [--run-output-file [RUN-OUTPUT-FILE]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"run-output-file","description":"The file to direct <info>schedule:run<\/info> output to","value_required":false,"value_optional":true}]},{"name":"schema:dump","description":"Dump the given database schema","synopsis":"schema:dump [--database [DATABASE]] [--path [PATH]] [--prune]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection to use","value_required":false,"value_optional":true},{"name":"path","description":"The path where the schema dump file should be stored","value_required":false,"value_optional":true},{"name":"prune","description":"Delete all existing migration files","value_required":false,"value_optional":false}]},{"name":"serve","description":"Serve the application on the PHP development server","synopsis":"serve [--host [HOST]] [--port [PORT]] [--tries [TRIES]] [--no-reload]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"host","description":"The host address to serve the application on","value_required":false,"value_optional":true},{"name":"port","description":"The port to serve the application on","value_required":false,"value_optional":true},{"name":"tries","description":"The max number of ports to attempt to serve from","value_required":false,"value_optional":true},{"name":"no-reload","description":"Do not reload the development server on .env file changes","value_required":false,"value_optional":false}]},{"name":"session:table","description":"Create a migration for the session database table","synopsis":"session:table","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"storage:link","description":"Create the symbolic links configured for the application","synopsis":"storage:link [--relative] [--force]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"relative","description":"Create the symbolic link using relative paths","value_required":false,"value_optional":false},{"name":"force","description":"Recreate existing symbolic links","value_required":false,"value_optional":false}]},{"name":"storage:unlink","description":"Delete existing symbolic links configured for the application","synopsis":"storage:unlink","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"stub:publish","description":"Publish all stubs that are available for customization","synopsis":"stub:publish [--existing] [--force]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"existing","description":"Publish and overwrite only the files that have already been published","value_required":false,"value_optional":false},{"name":"force","description":"Overwrite any existing files","value_required":false,"value_optional":false}]},{"name":"test","description":"Run the application tests","synopsis":"test [--without-tty] [--compact] [--coverage] [--min [MIN]] [-p|--parallel] [--profile] [--recreate-databases] [--drop-databases] [--without-databases]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"without-tty","description":"Disable output to TTY","value_required":false,"value_optional":false},{"name":"compact","description":"Indicates whether the compact printer should be used","value_required":false,"value_optional":false},{"name":"coverage","description":"Indicates whether code coverage information should be collected","value_required":false,"value_optional":false},{"name":"min","description":"Indicates the minimum threshold enforcement for code coverage","value_required":false,"value_optional":true},{"name":"parallel","description":"Indicates if the tests should run in parallel","value_required":false,"value_optional":false},{"name":"profile","description":"Lists top 10 slowest tests","value_required":false,"value_optional":false},{"name":"recreate-databases","description":"Indicates if the test databases should be re-created","value_required":false,"value_optional":false},{"name":"drop-databases","description":"Indicates if the test databases should be dropped","value_required":false,"value_optional":false},{"name":"without-databases","description":"Indicates if database configuration should be performed","value_required":false,"value_optional":false}]},{"name":"tinker","description":"Interact with your application","synopsis":"tinker [--execute [EXECUTE]] [--] [<include>...]","definition":{},"aliases":[],"arguments":[{"name":"include","description":"Include file(s) before starting tinker","default":[],"required":false}],"options":[{"name":"execute","description":"Execute the given code using Tinker","value_required":false,"value_optional":true}]},{"name":"up","description":"Bring the application out of maintenance mode","synopsis":"up","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"vendor:publish","description":"Publish any publishable assets from vendor packages","synopsis":"vendor:publish [--existing] [--force] [--all] [--provider [PROVIDER]] [--tag [TAG]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"existing","description":"Publish and overwrite only the files that have already been published","value_required":false,"value_optional":false},{"name":"force","description":"Overwrite any existing files","value_required":false,"value_optional":false},{"name":"all","description":"Publish assets for all service providers without prompt","value_required":false,"value_optional":false},{"name":"provider","description":"The service provider that has assets you want to publish","value_required":false,"value_optional":true},{"name":"tag","description":"One or many tags that have assets you want to publish","value_required":false,"value_optional":true}]},{"name":"view:cache","description":"Compile all of the application's Blade templates","synopsis":"view:cache","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"view:clear","description":"Clear all compiled view files","synopsis":"view:clear","definition":{},"aliases":[],"arguments":[],"options":[]}]
