[{"name":"_complete","description":"Internal command to provide shell completion suggestions","synopsis":"_complete [-s|--shell SHELL] [-i|--input INPUT] [-c|--current CURRENT] [-a|--api-version API-VERSION] [-S|--symfony SYMFONY]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"shell","description":"The shell type (\"bash\", \"fish\", \"zsh\")","default":null,"value_required":true,"value_optional":false},{"name":"input","description":"An array of input tokens (e.g. COMP_WORDS or argv)","default":[],"value_required":true,"value_optional":false},{"name":"current","description":"The index of the \"input\" array that the cursor is in (e.g. COMP_CWORD)","default":null,"value_required":true,"value_optional":false},{"name":"api-version","description":"The API version of the completion script","default":null,"value_required":true,"value_optional":false},{"name":"symfony","description":"deprecated","default":null,"value_required":true,"value_optional":false}]},{"name":"about","description":"Display basic information about your application","synopsis":"about [--only [ONLY]] [--json]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"only","description":"The section to display","default":null,"value_required":false,"value_optional":true},{"name":"json","description":"Output the information as JSON","default":false,"value_required":false,"value_optional":false}]},{"name":"auth:clear-resets","description":"Flush expired password reset tokens","synopsis":"auth:clear-resets [<name>]","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the password broker","default":null,"required":false}],"options":[]},{"name":"breeze:install","description":"Install the Breeze controllers and resources","synopsis":"breeze:install [--dark] [--pest] [--ssr] [--typescript] [--eslint] [--composer [COMPOSER]] [--] <stack>","definition":{},"aliases":[],"arguments":[{"name":"stack","description":"The development stack that should be installed (blade,livewire,livewire-functional,react,vue,api)","default":null,"required":true}],"options":[{"name":"dark","description":"Indicate that dark mode support should be installed","default":false,"value_required":false,"value_optional":false},{"name":"pest","description":"Indicate that Pest should be installed","default":false,"value_required":false,"value_optional":false},{"name":"ssr","description":"Indicates if Inertia SSR support should be installed","default":false,"value_required":false,"value_optional":false},{"name":"typescript","description":"Indicates if TypeScript is preferred for the Inertia stack","default":false,"value_required":false,"value_optional":false},{"name":"eslint","description":"Indicates if ESLint with Prettier should be installed","default":false,"value_required":false,"value_optional":false},{"name":"composer","description":"Absolute path to the Composer binary which should be used to install packages","default":"global","value_required":false,"value_optional":true}]},{"name":"cache:clear","description":"Flush the application cache","synopsis":"cache:clear [--tags [TAGS]] [--] [<store>]","definition":{},"aliases":[],"arguments":[{"name":"store","description":"The name of the store you would like to clear","default":null,"required":false}],"options":[{"name":"tags","description":"The cache tags you would like to clear","default":null,"value_required":false,"value_optional":true}]},{"name":"cache:forget","description":"Remove an item from the cache","synopsis":"cache:forget <key> [<store>]","definition":{},"aliases":[],"arguments":[{"name":"key","description":"The key to remove","default":null,"required":true},{"name":"store","description":"The store to remove the key from","default":null,"required":false}],"options":[]},{"name":"cache:prune-stale-tags","description":"Prune stale cache tags from the cache (Redis only)","synopsis":"cache:prune-stale-tags [<store>]","definition":{},"aliases":[],"arguments":[{"name":"store","description":"The name of the store you would like to prune tags from","default":null,"required":false}],"options":[]},{"name":"cashier:webhook","description":"Create the Stripe webhook to interact with Cashier","synopsis":"cashier:webhook [--disabled] [--url [URL]] [--api-version [API-VERSION]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"disabled","description":"Immediately disable the webhook after creation","default":false,"value_required":false,"value_optional":false},{"name":"url","description":"The URL endpoint for the webhook","default":null,"value_required":false,"value_optional":true},{"name":"api-version","description":"The Stripe API version the webhook should use","default":null,"value_required":false,"value_optional":true}]},{"name":"channel:list","description":"List all registered private broadcast channels","synopsis":"channel:list","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"clear-compiled","description":"Remove the compiled class file","synopsis":"clear-compiled","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"completion","description":"Dump the shell completion script","synopsis":"completion [--debug] [--] [<shell>]","definition":{},"aliases":[],"arguments":[{"name":"shell","description":"The shell type (e.g. \"bash\"), the value of the \"$SHELL\" env var will be used if this is not given","default":null,"required":false}],"options":[{"name":"debug","description":"Tail the completion debug log","default":false,"value_required":false,"value_optional":false}]},{"name":"config:cache","description":"Create a cache file for faster configuration loading","synopsis":"config:cache","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"config:clear","description":"Remove the configuration cache file","synopsis":"config:clear","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"config:publish","description":"Publish configuration files to your application","synopsis":"config:publish [--all] [--force] [--] [<name>]","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the configuration file to publish","default":null,"required":false}],"options":[{"name":"all","description":"Publish all configuration files","default":false,"value_required":false,"value_optional":false},{"name":"force","description":"Overwrite any existing configuration files","default":false,"value_required":false,"value_optional":false}]},{"name":"config:show","description":"Display all of the values for a given configuration file or key","synopsis":"config:show <config>","definition":{},"aliases":[],"arguments":[{"name":"config","description":"The configuration file or key to show","default":null,"required":true}],"options":[]},{"name":"db","description":"Start a new database CLI session","synopsis":"db [--read] [--write] [--] [<connection>]","definition":{},"aliases":[],"arguments":[{"name":"connection","description":"The database connection that should be used","default":null,"required":false}],"options":[{"name":"read","description":"Connect to the read connection","default":false,"value_required":false,"value_optional":false},{"name":"write","description":"Connect to the write connection","default":false,"value_required":false,"value_optional":false}]},{"name":"db:monitor","description":"Monitor the number of connections on the specified database","synopsis":"db:monitor [--databases [DATABASES]] [--max [MAX]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"databases","description":"The database connections to monitor","default":null,"value_required":false,"value_optional":true},{"name":"max","description":"The maximum number of connections that can be open before an event is dispatched","default":null,"value_required":false,"value_optional":true}]},{"name":"db:seed","description":"Seed the database with records","synopsis":"db:seed [--class [CLASS]] [--database [DATABASE]] [--force] [--] [<class>]","definition":{},"aliases":[],"arguments":[{"name":"class","description":"The class name of the root seeder","default":null,"required":false}],"options":[{"name":"class","description":"The class name of the root seeder","default":"Database\\Seeders\\DatabaseSeeder","value_required":false,"value_optional":true},{"name":"database","description":"The database connection to seed","default":null,"value_required":false,"value_optional":true},{"name":"force","description":"Force the operation to run when in production","default":false,"value_required":false,"value_optional":false}]},{"name":"db:show","description":"Display information about the given database","synopsis":"db:show [--database [DATABASE]] [--json] [--counts] [--views] [--types]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection","default":null,"value_required":false,"value_optional":true},{"name":"json","description":"Output the database information as JSON","default":false,"value_required":false,"value_optional":false},{"name":"counts","description":"Show the table row count <bg=red;options=bold> Note: This can be slow on large databases <\/>","default":false,"value_required":false,"value_optional":false},{"name":"views","description":"Show the database views <bg=red;options=bold> Note: This can be slow on large databases <\/>","default":false,"value_required":false,"value_optional":false},{"name":"types","description":"Show the user defined types","default":false,"value_required":false,"value_optional":false}]},{"name":"db:table","description":"Display information about the given database table","synopsis":"db:table [--database [DATABASE]] [--json] [--] [<table>]","definition":{},"aliases":[],"arguments":[{"name":"table","description":"The name of the table","default":null,"required":false}],"options":[{"name":"database","description":"The database connection","default":null,"value_required":false,"value_optional":true},{"name":"json","description":"Output the table information as JSON","default":false,"value_required":false,"value_optional":false}]},{"name":"db:wipe","description":"Drop all tables, views, and types","synopsis":"db:wipe [--database [DATABASE]] [--drop-views] [--drop-types] [--force]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection to use","default":null,"value_required":false,"value_optional":true},{"name":"drop-views","description":"Drop all tables and views","default":false,"value_required":false,"value_optional":false},{"name":"drop-types","description":"Drop all tables and types (Postgres only)","default":false,"value_required":false,"value_optional":false},{"name":"force","description":"Force the operation to run when in production","default":false,"value_required":false,"value_optional":false}]},{"name":"docs","description":"Access the Laravel documentation","synopsis":"docs [<page> [<section>]]","definition":{},"aliases":[],"arguments":[{"name":"page","description":"The documentation page to open","default":null,"required":false},{"name":"section","description":"The section of the page to open","default":null,"required":false}],"options":[]},{"name":"down","description":"Put the application into maintenance \/ demo mode","synopsis":"down [--redirect [REDIRECT]] [--render [RENDER]] [--retry [RETRY]] [--refresh [REFRESH]] [--secret [SECRET]] [--with-secret] [--status [STATUS]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"redirect","description":"The path that users should be redirected to","default":null,"value_required":false,"value_optional":true},{"name":"render","description":"The view that should be prerendered for display during maintenance mode","default":null,"value_required":false,"value_optional":true},{"name":"retry","description":"The number of seconds after which the request may be retried","default":null,"value_required":false,"value_optional":true},{"name":"refresh","description":"The number of seconds after which the browser may refresh","default":null,"value_required":false,"value_optional":true},{"name":"secret","description":"The secret phrase that may be used to bypass maintenance mode","default":null,"value_required":false,"value_optional":true},{"name":"with-secret","description":"Generate a random secret phrase that may be used to bypass maintenance mode","default":false,"value_required":false,"value_optional":false},{"name":"status","description":"The status code that should be used when returning the maintenance mode response","default":"503","value_required":false,"value_optional":true}]},{"name":"dusk","description":"Run the Dusk tests for the application","synopsis":"dusk [--browse] [--without-tty]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"browse","description":"Open a browser instead of using headless mode","default":false,"value_required":false,"value_optional":false},{"name":"without-tty","description":"Disable output to TTY","default":false,"value_required":false,"value_optional":false}]},{"name":"dusk:chrome-driver","description":"Install the ChromeDriver binary","synopsis":"dusk:chrome-driver [--all] [--detect] [--proxy [PROXY]] [--ssl-no-verify] [--] [<version>]","definition":{},"aliases":[],"arguments":[{"name":"version","description":"","default":null,"required":false}],"options":[{"name":"all","description":"Install a ChromeDriver binary for every OS","default":false,"value_required":false,"value_optional":false},{"name":"detect","description":"Detect the installed Chrome \/ Chromium version","default":false,"value_required":false,"value_optional":false},{"name":"proxy","description":"The proxy to download the binary through (example: \"tcp:\/\/127.0.0.1:9000\")","default":null,"value_required":false,"value_optional":true},{"name":"ssl-no-verify","description":"Bypass SSL certificate verification when installing through a proxy","default":false,"value_required":false,"value_optional":false}]},{"name":"dusk:component","description":"Create a new Dusk component class","synopsis":"dusk:component <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the class","default":null,"required":true}],"options":[]},{"name":"dusk:fails","description":"Run the failing Dusk tests from the last run and stop on failure","synopsis":"dusk:fails [--browse] [--without-tty] [--pest]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"browse","description":"Open a browser instead of using headless mode","default":false,"value_required":false,"value_optional":false},{"name":"without-tty","description":"Disable output to TTY","default":false,"value_required":false,"value_optional":false},{"name":"pest","description":"Run the tests using Pest","default":false,"value_required":false,"value_optional":false}]},{"name":"dusk:install","description":"Install Dusk into the application","synopsis":"dusk:install [--proxy [PROXY]] [--ssl-no-verify]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"proxy","description":"The proxy to download the binary through (example: \"tcp:\/\/127.0.0.1:9000\")","default":null,"value_required":false,"value_optional":true},{"name":"ssl-no-verify","description":"Bypass SSL certificate verification when installing through a proxy","default":false,"value_required":false,"value_optional":false}]},{"name":"dusk:make","description":"Create a new Dusk test class","synopsis":"dusk:make <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the class","default":null,"required":true}],"options":[]},{"name":"dusk:page","description":"Create a new Dusk page class","synopsis":"dusk:page <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the class","default":null,"required":true}],"options":[]},{"name":"dusk:purge","description":"Purge dusk test debugging files","synopsis":"dusk:purge","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"env","description":"Display the current framework environment","synopsis":"env","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"env:decrypt","description":"Decrypt an environment file","synopsis":"env:decrypt [--key [KEY]] [--cipher [CIPHER]] [--env [ENV]] [--force] [--path [PATH]] [--filename [FILENAME]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"key","description":"The encryption key","default":null,"value_required":false,"value_optional":true},{"name":"cipher","description":"The encryption cipher","default":null,"value_required":false,"value_optional":true},{"name":"env","description":"The environment to be decrypted","default":null,"value_required":false,"value_optional":true},{"name":"force","description":"Overwrite the existing environment file","default":false,"value_required":false,"value_optional":false},{"name":"path","description":"Path to write the decrypted file","default":null,"value_required":false,"value_optional":true},{"name":"filename","description":"Filename of the decrypted file","default":null,"value_required":false,"value_optional":true}]},{"name":"env:encrypt","description":"Encrypt an environment file","synopsis":"env:encrypt [--key [KEY]] [--cipher [CIPHER]] [--env [ENV]] [--prune] [--force]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"key","description":"The encryption key","default":null,"value_required":false,"value_optional":true},{"name":"cipher","description":"The encryption cipher","default":null,"value_required":false,"value_optional":true},{"name":"env","description":"The environment to be encrypted","default":null,"value_required":false,"value_optional":true},{"name":"prune","description":"Delete the original environment file","default":false,"value_required":false,"value_optional":false},{"name":"force","description":"Overwrite the existing encrypted environment file","default":false,"value_required":false,"value_optional":false}]},{"name":"event:cache","description":"Discover and cache the application's events and listeners","synopsis":"event:cache","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"event:clear","description":"Clear all cached events and listeners","synopsis":"event:clear","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"event:generate","description":"Generate the missing events and listeners based on registration","synopsis":"event:generate","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"event:list","description":"List the application's events and listeners","synopsis":"event:list [--event [EVENT]] [--json]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"event","description":"Filter the events by name","default":null,"value_required":false,"value_optional":true},{"name":"json","description":"Output the events and listeners as JSON","default":false,"value_required":false,"value_optional":false}]},{"name":"fortify:install","description":"Install all of the Fortify resources","synopsis":"fortify:install","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"help","description":"Display help for a command","synopsis":"help [--format FORMAT] [--raw] [--] [<command_name>]","definition":{},"aliases":[],"arguments":[{"name":"command_name","description":"The command name","default":"help","required":false}],"options":[{"name":"format","description":"The output format (txt, xml, json, or md)","default":"txt","value_required":true,"value_optional":false},{"name":"raw","description":"To output raw command help","default":false,"value_required":false,"value_optional":false}]},{"name":"horizon","description":"Start a master supervisor in the foreground","synopsis":"horizon [--environment [ENVIRONMENT]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"environment","description":"The environment name","default":null,"value_required":false,"value_optional":true}]},{"name":"horizon:clear","description":"Delete all of the jobs from the specified queue","synopsis":"horizon:clear [--queue [QUEUE]] [--force] [--] [<connection>]","definition":{},"aliases":[],"arguments":[{"name":"connection","description":"The name of the queue connection","default":null,"required":false}],"options":[{"name":"queue","description":"The name of the queue to clear","default":null,"value_required":false,"value_optional":true},{"name":"force","description":"Force the operation to run when in production","default":false,"value_required":false,"value_optional":false}]},{"name":"horizon:clear-metrics","description":"Delete metrics for all jobs and queues","synopsis":"horizon:clear-metrics","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"horizon:continue","description":"Instruct the master supervisor to continue processing jobs","synopsis":"horizon:continue","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"horizon:continue-supervisor","description":"Instruct the supervisor to continue processing jobs","synopsis":"horizon:continue-supervisor <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the supervisor to resume","default":null,"required":true}],"options":[]},{"name":"horizon:forget","description":"Delete a failed queue job","synopsis":"horizon:forget [--all] [--] [<id>]","definition":{},"aliases":[],"arguments":[{"name":"id","description":"The ID of the failed job","default":null,"required":false}],"options":[{"name":"all","description":"Delete all failed jobs","default":false,"value_required":false,"value_optional":false}]},{"name":"horizon:install","description":"Install all of the Horizon resources","synopsis":"horizon:install","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"horizon:list","description":"List all of the deployed machines","synopsis":"horizon:list","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"horizon:pause","description":"Pause the master supervisor","synopsis":"horizon:pause","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"horizon:pause-supervisor","description":"Pause a supervisor","synopsis":"horizon:pause-supervisor <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the supervisor to pause","default":null,"required":true}],"options":[]},{"name":"horizon:publish","description":"Publish all of the Horizon resources","synopsis":"horizon:publish","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"horizon:purge","description":"Terminate any rogue Horizon processes","synopsis":"horizon:purge [--signal [SIGNAL]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"signal","description":"The signal to send to the rogue processes","default":"SIGTERM","value_required":false,"value_optional":true}]},{"name":"horizon:snapshot","description":"Store a snapshot of the queue metrics","synopsis":"horizon:snapshot","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"horizon:status","description":"Get the current status of Horizon","synopsis":"horizon:status","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"horizon:supervisor","description":"Start a new supervisor","synopsis":"horizon:supervisor [--balance [BALANCE]] [--delay [DELAY]] [--backoff [BACKOFF]] [--max-jobs [MAX-JOBS]] [--max-time [MAX-TIME]] [--force] [--max-processes [MAX-PROCESSES]] [--min-processes [MIN-PROCESSES]] [--memory [MEMORY]] [--nice [NICE]] [--paused] [--queue [QUEUE]] [--sleep [SLEEP]] [--timeout [TIMEOUT]] [--tries [TRIES]] [--auto-scaling-strategy [AUTO-SCALING-STRATEGY]] [--balance-cooldown [BALANCE-COOLDOWN]] [--balance-max-shift [BALANCE-MAX-SHIFT]] [--workers-name [WORKERS-NAME]] [--parent-id [PARENT-ID]] [--rest [REST]] [--] <name> <connection>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of supervisor","default":null,"required":true},{"name":"connection","description":"The name of the connection to work","default":null,"required":true}],"options":[{"name":"balance","description":"The balancing strategy the supervisor should apply","default":null,"value_required":false,"value_optional":true},{"name":"delay","description":"The number of seconds to delay failed jobs (Deprecated)","default":"0","value_required":false,"value_optional":true},{"name":"backoff","description":"The number of seconds to wait before retrying a job that encountered an uncaught exception","default":"0","value_required":false,"value_optional":true},{"name":"max-jobs","description":"The number of jobs to process before stopping a child process","default":"0","value_required":false,"value_optional":true},{"name":"max-time","description":"The maximum number of seconds a child process should run","default":"0","value_required":false,"value_optional":true},{"name":"force","description":"Force the worker to run even in maintenance mode","default":false,"value_required":false,"value_optional":false},{"name":"max-processes","description":"The maximum number of total workers to start","default":"1","value_required":false,"value_optional":true},{"name":"min-processes","description":"The minimum number of workers to assign per queue","default":"1","value_required":false,"value_optional":true},{"name":"memory","description":"The memory limit in megabytes","default":"128","value_required":false,"value_optional":true},{"name":"nice","description":"The process priority","default":"0","value_required":false,"value_optional":true},{"name":"paused","description":"Start the supervisor in a paused state","default":false,"value_required":false,"value_optional":false},{"name":"queue","description":"The names of the queues to work","default":null,"value_required":false,"value_optional":true},{"name":"sleep","description":"Number of seconds to sleep when no job is available","default":"3","value_required":false,"value_optional":true},{"name":"timeout","description":"The number of seconds a child process can run","default":"60","value_required":false,"value_optional":true},{"name":"tries","description":"Number of times to attempt a job before logging it failed","default":"0","value_required":false,"value_optional":true},{"name":"auto-scaling-strategy","description":"If supervisor should scale by jobs or time to complete","default":"time","value_required":false,"value_optional":true},{"name":"balance-cooldown","description":"The number of seconds to wait in between auto-scaling attempts","default":"3","value_required":false,"value_optional":true},{"name":"balance-max-shift","description":"The maximum number of processes to increase or decrease per one scaling","default":"1","value_required":false,"value_optional":true},{"name":"workers-name","description":"The name that should be assigned to the workers","default":"default","value_required":false,"value_optional":true},{"name":"parent-id","description":"The parent process ID","default":"0","value_required":false,"value_optional":true},{"name":"rest","description":"Number of seconds to rest between jobs","default":"0","value_required":false,"value_optional":true}]},{"name":"horizon:supervisor-status","description":"Show the status for a given supervisor","synopsis":"horizon:supervisor-status <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the supervisor","default":null,"required":true}],"options":[]},{"name":"horizon:supervisors","description":"List all of the supervisors","synopsis":"horizon:supervisors","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"horizon:terminate","description":"Terminate the master supervisor so it can be restarted","synopsis":"horizon:terminate [--wait]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"wait","description":"Wait for all workers to terminate","default":false,"value_required":false,"value_optional":false}]},{"name":"horizon:timeout","description":"Get the maximum timeout for the given environment","synopsis":"horizon:timeout [<environment>]","definition":{},"aliases":[],"arguments":[{"name":"environment","description":"The environment name","default":"production","required":false}],"options":[]},{"name":"horizon:work","description":"Start processing jobs on the queue as a daemon","synopsis":"horizon:work [--name [NAME]] [--delay [DELAY]] [--backoff [BACKOFF]] [--max-jobs [MAX-JOBS]] [--max-time [MAX-TIME]] [--daemon] [--force] [--memory [MEMORY]] [--once] [--stop-when-empty] [--queue [QUEUE]] [--sleep [SLEEP]] [--rest [REST]] [--supervisor [SUPERVISOR]] [--timeout [TIMEOUT]] [--tries [TRIES]] [--json] [--] [<connection>]","definition":{},"aliases":[],"arguments":[{"name":"connection","description":"The name of the queue connection to work","default":null,"required":false}],"options":[{"name":"name","description":"The name of the worker","default":"default","value_required":false,"value_optional":true},{"name":"delay","description":"The number of seconds to delay failed jobs (Deprecated)","default":"0","value_required":false,"value_optional":true},{"name":"backoff","description":"The number of seconds to wait before retrying a job that encountered an uncaught exception","default":"0","value_required":false,"value_optional":true},{"name":"max-jobs","description":"The number of jobs to process before stopping","default":"0","value_required":false,"value_optional":true},{"name":"max-time","description":"The maximum number of seconds the worker should run","default":"0","value_required":false,"value_optional":true},{"name":"daemon","description":"Run the worker in daemon mode (Deprecated)","default":false,"value_required":false,"value_optional":false},{"name":"force","description":"Force the worker to run even in maintenance mode","default":false,"value_required":false,"value_optional":false},{"name":"memory","description":"The memory limit in megabytes","default":"128","value_required":false,"value_optional":true},{"name":"once","description":"Only process the next job on the queue","default":false,"value_required":false,"value_optional":false},{"name":"stop-when-empty","description":"Stop when the queue is empty","default":false,"value_required":false,"value_optional":false},{"name":"queue","description":"The names of the queues to work","default":null,"value_required":false,"value_optional":true},{"name":"sleep","description":"Number of seconds to sleep when no job is available","default":"3","value_required":false,"value_optional":true},{"name":"rest","description":"Number of seconds to rest between jobs","default":"0","value_required":false,"value_optional":true},{"name":"supervisor","description":"The name of the supervisor the worker belongs to","default":null,"value_required":false,"value_optional":true},{"name":"timeout","description":"The number of seconds a child process can run","default":"60","value_required":false,"value_optional":true},{"name":"tries","description":"Number of times to attempt a job before logging it failed","default":"0","value_required":false,"value_optional":true},{"name":"json","description":"Output the queue worker information as JSON","default":false,"value_required":false,"value_optional":false}]},{"name":"inertia:check-ssr","description":"Check the Inertia SSR server health status","synopsis":"inertia:check-ssr","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"inertia:middleware","description":"Create a new Inertia middleware","synopsis":"inertia:middleware [--force] [--] [<name>]","definition":{},"aliases":[],"arguments":[{"name":"name","description":"Name of the Middleware that should be created","default":"HandleInertiaRequests","required":false}],"options":[{"name":"force","description":"Create the class even if the Middleware already exists","default":false,"value_required":false,"value_optional":false}]},{"name":"inertia:start-ssr","description":"Start the Inertia SSR server","synopsis":"inertia:start-ssr [--runtime [RUNTIME]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"runtime","description":"The runtime to use (`node` or `bun`)","default":"node","value_required":false,"value_optional":true}]},{"name":"inertia:stop-ssr","description":"Stop the Inertia SSR server","synopsis":"inertia:stop-ssr","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"inspire","description":"Display an inspiring quote","synopsis":"inspire","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"install:api","description":"Create an API routes file and install Laravel Sanctum or Laravel Passport","synopsis":"install:api [--composer [COMPOSER]] [--force] [--passport] [--without-migration-prompt]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"composer","description":"Absolute path to the Composer binary which should be used to install packages","default":"global","value_required":false,"value_optional":true},{"name":"force","description":"Overwrite any existing API routes file","default":false,"value_required":false,"value_optional":false},{"name":"passport","description":"Install Laravel Passport instead of Laravel Sanctum","default":false,"value_required":false,"value_optional":false},{"name":"without-migration-prompt","description":"Do not prompt to run pending migrations","default":false,"value_required":false,"value_optional":false}]},{"name":"install:broadcasting","description":"Create a broadcasting channel routes file","synopsis":"install:broadcasting [--composer [COMPOSER]] [--force] [--without-reverb] [--reverb] [--pusher] [--ably] [--without-node]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"composer","description":"Absolute path to the Composer binary which should be used to install packages","default":"global","value_required":false,"value_optional":true},{"name":"force","description":"Overwrite any existing broadcasting routes file","default":false,"value_required":false,"value_optional":false},{"name":"without-reverb","description":"Do not prompt to install Laravel Reverb","default":false,"value_required":false,"value_optional":false},{"name":"reverb","description":"Install Laravel Reverb as the default broadcaster","default":false,"value_required":false,"value_optional":false},{"name":"pusher","description":"Install Pusher as the default broadcaster","default":false,"value_required":false,"value_optional":false},{"name":"ably","description":"Install Ably as the default broadcaster","default":false,"value_required":false,"value_optional":false},{"name":"without-node","description":"Do not prompt to install Node dependencies","default":false,"value_required":false,"value_optional":false}]},{"name":"invoke-serialized-closure","description":"Invoke the given serialized closure","synopsis":"invoke-serialized-closure [<code>]","definition":{},"aliases":[],"arguments":[{"name":"code","description":"The serialized closure","default":null,"required":false}],"options":[]},{"name":"jetstream:install","description":"Install the Jetstream components and resources","synopsis":"jetstream:install [--dark] [--teams] [--api] [--verification] [--pest] [--ssr] [--composer [COMPOSER]] [--] <stack>","definition":{},"aliases":[],"arguments":[{"name":"stack","description":"The development stack that should be installed (inertia,livewire)","default":null,"required":true}],"options":[{"name":"dark","description":"Indicate that dark mode support should be installed","default":false,"value_required":false,"value_optional":false},{"name":"teams","description":"Indicates if team support should be installed","default":false,"value_required":false,"value_optional":false},{"name":"api","description":"Indicates if API support should be installed","default":false,"value_required":false,"value_optional":false},{"name":"verification","description":"Indicates if email verification support should be installed","default":false,"value_required":false,"value_optional":false},{"name":"pest","description":"Indicates if Pest should be installed","default":false,"value_required":false,"value_optional":false},{"name":"ssr","description":"Indicates if Inertia SSR support should be installed","default":false,"value_required":false,"value_optional":false},{"name":"composer","description":"Absolute path to the Composer binary which should be used to install packages","default":"global","value_required":false,"value_optional":true}]},{"name":"key:generate","description":"Set the application key","synopsis":"key:generate [--show] [--force]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"show","description":"Display the key instead of modifying files","default":false,"value_required":false,"value_optional":false},{"name":"force","description":"Force the operation to run when in production","default":false,"value_required":false,"value_optional":false}]},{"name":"lang:publish","description":"Publish all language files that are available for customization","synopsis":"lang:publish [--existing] [--force]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"existing","description":"Publish and overwrite only the files that have already been published","default":false,"value_required":false,"value_optional":false},{"name":"force","description":"Overwrite any existing files","default":false,"value_required":false,"value_optional":false}]},{"name":"list","description":"List commands","synopsis":"list [--raw] [--format FORMAT] [--short] [--] [<namespace>]","definition":{},"aliases":[],"arguments":[{"name":"namespace","description":"The namespace name","default":null,"required":false}],"options":[{"name":"raw","description":"To output raw command list","default":false,"value_required":false,"value_optional":false},{"name":"format","description":"The output format (txt, xml, json, or md)","default":"txt","value_required":true,"value_optional":false},{"name":"short","description":"To skip describing commands' arguments","default":false,"value_required":false,"value_optional":false}]},{"name":"livewire:attribute","description":"Create a new Livewire attribute class","synopsis":"livewire:attribute [--force] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"","default":null,"required":true}],"options":[{"name":"force","description":"","default":false,"value_required":false,"value_optional":false}]},{"name":"livewire:configure-s3-upload-cleanup","description":"Configure temporary file upload s3 directory to automatically cleanup files older than 24hrs","synopsis":"livewire:configure-s3-upload-cleanup","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"livewire:copy","description":"Copy a Livewire component","synopsis":"livewire:copy [--inline] [--force] [--test] [--] <name> <new-name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"","default":null,"required":true},{"name":"new-name","description":"","default":null,"required":true}],"options":[{"name":"inline","description":"","default":false,"value_required":false,"value_optional":false},{"name":"force","description":"","default":false,"value_required":false,"value_optional":false},{"name":"test","description":"","default":false,"value_required":false,"value_optional":false}]},{"name":"livewire:cp","description":"Copy a Livewire component","synopsis":"livewire:cp [--inline] [--force] [--test] [--] <name> <new-name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"","default":null,"required":true},{"name":"new-name","description":"","default":null,"required":true}],"options":[{"name":"inline","description":"","default":false,"value_required":false,"value_optional":false},{"name":"force","description":"","default":false,"value_required":false,"value_optional":false},{"name":"test","description":"","default":false,"value_required":false,"value_optional":false}]},{"name":"livewire:delete","description":"Delete a Livewire component","synopsis":"livewire:delete [--inline] [--force] [--test] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"","default":null,"required":true}],"options":[{"name":"inline","description":"","default":false,"value_required":false,"value_optional":false},{"name":"force","description":"","default":false,"value_required":false,"value_optional":false},{"name":"test","description":"","default":false,"value_required":false,"value_optional":false}]},{"name":"livewire:form","description":"Create a new Livewire form class","synopsis":"livewire:form [--force] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"","default":null,"required":true}],"options":[{"name":"force","description":"","default":false,"value_required":false,"value_optional":false}]},{"name":"livewire:layout","description":"Create a new app layout file","synopsis":"livewire:layout [--force] [--stub [STUB]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"force","description":"","default":false,"value_required":false,"value_optional":false},{"name":"stub","description":"If you have several stubs, stored in subfolders","default":null,"value_required":false,"value_optional":true}]},{"name":"livewire:make","description":"Create a new Livewire component","synopsis":"livewire:make [--force] [--inline] [--test] [--pest] [--stub [STUB]] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"","default":null,"required":true}],"options":[{"name":"force","description":"","default":false,"value_required":false,"value_optional":false},{"name":"inline","description":"","default":false,"value_required":false,"value_optional":false},{"name":"test","description":"","default":false,"value_required":false,"value_optional":false},{"name":"pest","description":"","default":false,"value_required":false,"value_optional":false},{"name":"stub","description":"If you have several stubs, stored in subfolders","default":null,"value_required":false,"value_optional":true}]},{"name":"livewire:move","description":"Move a Livewire component","synopsis":"livewire:move [--force] [--inline] [--] <name> <new-name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"","default":null,"required":true},{"name":"new-name","description":"","default":null,"required":true}],"options":[{"name":"force","description":"","default":false,"value_required":false,"value_optional":false},{"name":"inline","description":"","default":false,"value_required":false,"value_optional":false}]},{"name":"livewire:mv","description":"Move a Livewire component","synopsis":"livewire:mv [--inline] [--force] [--] <name> <new-name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"","default":null,"required":true},{"name":"new-name","description":"","default":null,"required":true}],"options":[{"name":"inline","description":"","default":false,"value_required":false,"value_optional":false},{"name":"force","description":"","default":false,"value_required":false,"value_optional":false}]},{"name":"livewire:publish","description":"Publish Livewire configuration","synopsis":"livewire:publish [--assets] [--config] [--pagination]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"assets","description":"Indicates if Livewire's front-end assets should be published","default":false,"value_required":false,"value_optional":false},{"name":"config","description":"Indicates if Livewire's config file should be published","default":false,"value_required":false,"value_optional":false},{"name":"pagination","description":"Indicates if Livewire's pagination views should be published","default":false,"value_required":false,"value_optional":false}]},{"name":"livewire:rm","description":"Delete a Livewire component","synopsis":"livewire:rm [--inline] [--force] [--test] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"","default":null,"required":true}],"options":[{"name":"inline","description":"","default":false,"value_required":false,"value_optional":false},{"name":"force","description":"","default":false,"value_required":false,"value_optional":false},{"name":"test","description":"","default":false,"value_required":false,"value_optional":false}]},{"name":"livewire:stubs","description":"Publish Livewire stubs","synopsis":"livewire:stubs","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"livewire:touch","description":"Create a new Livewire component","synopsis":"livewire:touch [--force] [--inline] [--test] [--pest] [--stub [STUB]] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"","default":null,"required":true}],"options":[{"name":"force","description":"","default":false,"value_required":false,"value_optional":false},{"name":"inline","description":"","default":false,"value_required":false,"value_optional":false},{"name":"test","description":"","default":false,"value_required":false,"value_optional":false},{"name":"pest","description":"","default":false,"value_required":false,"value_optional":false},{"name":"stub","description":"","default":"default","value_required":false,"value_optional":true}]},{"name":"livewire:upgrade","description":"Interactive upgrade helper to migrate from v2 to v3","synopsis":"livewire:upgrade [--run-only [RUN-ONLY]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"run-only","description":"","default":null,"value_required":false,"value_optional":true}]},{"name":"make:cache-table","description":"Create a migration for the cache database table","synopsis":"make:cache-table","definition":{},"aliases":["cache:table"],"arguments":[],"options":[]},{"name":"make:cast","description":"Create a new custom Eloquent cast class","synopsis":"make:cast [-f|--force] [--inbound] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the cast","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the cast already exists","default":false,"value_required":false,"value_optional":false},{"name":"inbound","description":"Generate an inbound cast class","default":false,"value_required":false,"value_optional":false}]},{"name":"make:channel","description":"Create a new channel class","synopsis":"make:channel [-f|--force] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the channel","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the channel already exists","default":false,"value_required":false,"value_optional":false}]},{"name":"make:class","description":"Create a new class","synopsis":"make:class [-i|--invokable] [-f|--force] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the class","default":null,"required":true}],"options":[{"name":"invokable","description":"Generate a single method, invokable class","default":false,"value_required":false,"value_optional":false},{"name":"force","description":"Create the class even if the class already exists","default":false,"value_required":false,"value_optional":false}]},{"name":"make:command","description":"Create a new Artisan command","synopsis":"make:command [-f|--force] [--command [COMMAND]] [--test] [--pest] [--phpunit] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the command","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the console command already exists","default":false,"value_required":false,"value_optional":false},{"name":"command","description":"The terminal command that will be used to invoke the class","default":null,"value_required":false,"value_optional":true},{"name":"test","description":"Generate an accompanying Test test for the Console command","default":false,"value_required":false,"value_optional":false},{"name":"pest","description":"Generate an accompanying Pest test for the Console command","default":false,"value_required":false,"value_optional":false},{"name":"phpunit","description":"Generate an accompanying PHPUnit test for the Console command","default":false,"value_required":false,"value_optional":false}]},{"name":"make:component","description":"Create a new view component class","synopsis":"make:component [--inline] [--view] [--path PATH] [-f|--force] [--test] [--pest] [--phpunit] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the component","default":null,"required":true}],"options":[{"name":"inline","description":"Create a component that renders an inline view","default":false,"value_required":false,"value_optional":false},{"name":"view","description":"Create an anonymous component with only a view","default":false,"value_required":false,"value_optional":false},{"name":"path","description":"The location where the component view should be created","default":null,"value_required":true,"value_optional":false},{"name":"force","description":"Create the class even if the component already exists","default":false,"value_required":false,"value_optional":false},{"name":"test","description":"Generate an accompanying Test test for the Component","default":false,"value_required":false,"value_optional":false},{"name":"pest","description":"Generate an accompanying Pest test for the Component","default":false,"value_required":false,"value_optional":false},{"name":"phpunit","description":"Generate an accompanying PHPUnit test for the Component","default":false,"value_required":false,"value_optional":false}]},{"name":"make:config","description":"Create a new configuration file","synopsis":"make:config [-f|--force] [--] <name>","definition":{},"aliases":["config:make"],"arguments":[{"name":"name","description":"The name of the config","default":null,"required":true}],"options":[{"name":"force","description":"Create the configuration file even if it already exists","default":false,"value_required":false,"value_optional":false}]},{"name":"make:controller","description":"Create a new controller class","synopsis":"make:controller [--api] [--type TYPE] [--force] [-i|--invokable] [-m|--model [MODEL]] [-p|--parent [PARENT]] [-r|--resource] [-R|--requests] [-s|--singleton] [--creatable] [--test] [--pest] [--phpunit] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the controller","default":null,"required":true}],"options":[{"name":"api","description":"Exclude the create and edit methods from the controller","default":false,"value_required":false,"value_optional":false},{"name":"type","description":"Manually specify the controller stub file to use","default":null,"value_required":true,"value_optional":false},{"name":"force","description":"Create the class even if the controller already exists","default":false,"value_required":false,"value_optional":false},{"name":"invokable","description":"Generate a single method, invokable controller class","default":false,"value_required":false,"value_optional":false},{"name":"model","description":"Generate a resource controller for the given model","default":null,"value_required":false,"value_optional":true},{"name":"parent","description":"Generate a nested resource controller class","default":null,"value_required":false,"value_optional":true},{"name":"resource","description":"Generate a resource controller class","default":false,"value_required":false,"value_optional":false},{"name":"requests","description":"Generate FormRequest classes for store and update","default":false,"value_required":false,"value_optional":false},{"name":"singleton","description":"Generate a singleton resource controller class","default":false,"value_required":false,"value_optional":false},{"name":"creatable","description":"Indicate that a singleton resource should be creatable","default":false,"value_required":false,"value_optional":false},{"name":"test","description":"Generate an accompanying Test test for the Controller","default":false,"value_required":false,"value_optional":false},{"name":"pest","description":"Generate an accompanying Pest test for the Controller","default":false,"value_required":false,"value_optional":false},{"name":"phpunit","description":"Generate an accompanying PHPUnit test for the Controller","default":false,"value_required":false,"value_optional":false}]},{"name":"make:enum","description":"Create a new enum","synopsis":"make:enum [-s|--string] [-i|--int] [-f|--force] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the enum","default":null,"required":true}],"options":[{"name":"string","description":"Generate a string backed enum.","default":false,"value_required":false,"value_optional":false},{"name":"int","description":"Generate an integer backed enum.","default":false,"value_required":false,"value_optional":false},{"name":"force","description":"Create the enum even if the enum already exists","default":false,"value_required":false,"value_optional":false}]},{"name":"make:event","description":"Create a new event class","synopsis":"make:event [-f|--force] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the event","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the event already exists","default":false,"value_required":false,"value_optional":false}]},{"name":"make:exception","description":"Create a new custom exception class","synopsis":"make:exception [-f|--force] [--render] [--report] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the exception","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the exception already exists","default":false,"value_required":false,"value_optional":false},{"name":"render","description":"Create the exception with an empty render method","default":false,"value_required":false,"value_optional":false},{"name":"report","description":"Create the exception with an empty report method","default":false,"value_required":false,"value_optional":false}]},{"name":"make:factory","description":"Create a new model factory","synopsis":"make:factory [-m|--model [MODEL]] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the factory","default":null,"required":true}],"options":[{"name":"model","description":"The name of the model","default":null,"value_required":false,"value_optional":true}]},{"name":"make:interface","description":"Create a new interface","synopsis":"make:interface [-f|--force] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the interface","default":null,"required":true}],"options":[{"name":"force","description":"Create the interface even if the interface already exists","default":false,"value_required":false,"value_optional":false}]},{"name":"make:job","description":"Create a new job class","synopsis":"make:job [-f|--force] [--sync] [--batched] [--test] [--pest] [--phpunit] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the job","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the job already exists","default":false,"value_required":false,"value_optional":false},{"name":"sync","description":"Indicates that the job should be synchronous","default":false,"value_required":false,"value_optional":false},{"name":"batched","description":"Indicates that the job should be batchable","default":false,"value_required":false,"value_optional":false},{"name":"test","description":"Generate an accompanying Test test for the Job","default":false,"value_required":false,"value_optional":false},{"name":"pest","description":"Generate an accompanying Pest test for the Job","default":false,"value_required":false,"value_optional":false},{"name":"phpunit","description":"Generate an accompanying PHPUnit test for the Job","default":false,"value_required":false,"value_optional":false}]},{"name":"make:job-middleware","description":"Create a new job middleware class","synopsis":"make:job-middleware [-f|--force] [--test] [--pest] [--phpunit] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the middleware","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the job middleware already exists","default":false,"value_required":false,"value_optional":false},{"name":"test","description":"Generate an accompanying Test test for the Middleware","default":false,"value_required":false,"value_optional":false},{"name":"pest","description":"Generate an accompanying Pest test for the Middleware","default":false,"value_required":false,"value_optional":false},{"name":"phpunit","description":"Generate an accompanying PHPUnit test for the Middleware","default":false,"value_required":false,"value_optional":false}]},{"name":"make:listener","description":"Create a new event listener class","synopsis":"make:listener [-e|--event [EVENT]] [-f|--force] [--queued] [--test] [--pest] [--phpunit] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the listener","default":null,"required":true}],"options":[{"name":"event","description":"The event class being listened for","default":null,"value_required":false,"value_optional":true},{"name":"force","description":"Create the class even if the listener already exists","default":false,"value_required":false,"value_optional":false},{"name":"queued","description":"Indicates the event listener should be queued","default":false,"value_required":false,"value_optional":false},{"name":"test","description":"Generate an accompanying Test test for the Listener","default":false,"value_required":false,"value_optional":false},{"name":"pest","description":"Generate an accompanying Pest test for the Listener","default":false,"value_required":false,"value_optional":false},{"name":"phpunit","description":"Generate an accompanying PHPUnit test for the Listener","default":false,"value_required":false,"value_optional":false}]},{"name":"make:livewire","description":"Create a new Livewire component","synopsis":"make:livewire [--force] [--inline] [--test] [--pest] [--stub [STUB]] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"","default":null,"required":true}],"options":[{"name":"force","description":"","default":false,"value_required":false,"value_optional":false},{"name":"inline","description":"","default":false,"value_required":false,"value_optional":false},{"name":"test","description":"","default":false,"value_required":false,"value_optional":false},{"name":"pest","description":"","default":false,"value_required":false,"value_optional":false},{"name":"stub","description":"","default":null,"value_required":false,"value_optional":true}]},{"name":"make:mail","description":"Create a new email class","synopsis":"make:mail [-f|--force] [-m|--markdown [MARKDOWN]] [--view [VIEW]] [--test] [--pest] [--phpunit] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the mailable","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the mailable already exists","default":false,"value_required":false,"value_optional":false},{"name":"markdown","description":"Create a new Markdown template for the mailable","default":false,"value_required":false,"value_optional":true},{"name":"view","description":"Create a new Blade template for the mailable","default":false,"value_required":false,"value_optional":true},{"name":"test","description":"Generate an accompanying Test test for the Mailable","default":false,"value_required":false,"value_optional":false},{"name":"pest","description":"Generate an accompanying Pest test for the Mailable","default":false,"value_required":false,"value_optional":false},{"name":"phpunit","description":"Generate an accompanying PHPUnit test for the Mailable","default":false,"value_required":false,"value_optional":false}]},{"name":"make:middleware","description":"Create a new HTTP middleware class","synopsis":"make:middleware [--test] [--pest] [--phpunit] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the middleware","default":null,"required":true}],"options":[{"name":"test","description":"Generate an accompanying Test test for the Middleware","default":false,"value_required":false,"value_optional":false},{"name":"pest","description":"Generate an accompanying Pest test for the Middleware","default":false,"value_required":false,"value_optional":false},{"name":"phpunit","description":"Generate an accompanying PHPUnit test for the Middleware","default":false,"value_required":false,"value_optional":false}]},{"name":"make:migration","description":"Create a new migration file","synopsis":"make:migration [--create [CREATE]] [--table [TABLE]] [--path [PATH]] [--realpath] [--fullpath] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the migration","default":null,"required":true}],"options":[{"name":"create","description":"The table to be created","default":null,"value_required":false,"value_optional":true},{"name":"table","description":"The table to migrate","default":null,"value_required":false,"value_optional":true},{"name":"path","description":"The location where the migration file should be created","default":null,"value_required":false,"value_optional":true},{"name":"realpath","description":"Indicate any provided migration file paths are pre-resolved absolute paths","default":false,"value_required":false,"value_optional":false},{"name":"fullpath","description":"Output the full path of the migration (Deprecated)","default":false,"value_required":false,"value_optional":false}]},{"name":"make:model","description":"Create a new Eloquent model class","synopsis":"make:model [-a|--all] [-c|--controller] [-f|--factory] [--force] [-m|--migration] [--morph-pivot] [--policy] [-s|--seed] [-p|--pivot] [-r|--resource] [--api] [-R|--requests] [--test] [--pest] [--phpunit] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the model","default":null,"required":true}],"options":[{"name":"all","description":"Generate a migration, seeder, factory, policy, resource controller, and form request classes for the model","default":false,"value_required":false,"value_optional":false},{"name":"controller","description":"Create a new controller for the model","default":false,"value_required":false,"value_optional":false},{"name":"factory","description":"Create a new factory for the model","default":false,"value_required":false,"value_optional":false},{"name":"force","description":"Create the class even if the model already exists","default":false,"value_required":false,"value_optional":false},{"name":"migration","description":"Create a new migration file for the model","default":false,"value_required":false,"value_optional":false},{"name":"morph-pivot","description":"Indicates if the generated model should be a custom polymorphic intermediate table model","default":false,"value_required":false,"value_optional":false},{"name":"policy","description":"Create a new policy for the model","default":false,"value_required":false,"value_optional":false},{"name":"seed","description":"Create a new seeder for the model","default":false,"value_required":false,"value_optional":false},{"name":"pivot","description":"Indicates if the generated model should be a custom intermediate table model","default":false,"value_required":false,"value_optional":false},{"name":"resource","description":"Indicates if the generated controller should be a resource controller","default":false,"value_required":false,"value_optional":false},{"name":"api","description":"Indicates if the generated controller should be an API resource controller","default":false,"value_required":false,"value_optional":false},{"name":"requests","description":"Create new form request classes and use them in the resource controller","default":false,"value_required":false,"value_optional":false},{"name":"test","description":"Generate an accompanying Test test for the Model","default":false,"value_required":false,"value_optional":false},{"name":"pest","description":"Generate an accompanying Pest test for the Model","default":false,"value_required":false,"value_optional":false},{"name":"phpunit","description":"Generate an accompanying PHPUnit test for the Model","default":false,"value_required":false,"value_optional":false}]},{"name":"make:notification","description":"Create a new notification class","synopsis":"make:notification [-f|--force] [-m|--markdown [MARKDOWN]] [--test] [--pest] [--phpunit] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the notification","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the notification already exists","default":false,"value_required":false,"value_optional":false},{"name":"markdown","description":"Create a new Markdown template for the notification","default":null,"value_required":false,"value_optional":true},{"name":"test","description":"Generate an accompanying Test test for the Notification","default":false,"value_required":false,"value_optional":false},{"name":"pest","description":"Generate an accompanying Pest test for the Notification","default":false,"value_required":false,"value_optional":false},{"name":"phpunit","description":"Generate an accompanying PHPUnit test for the Notification","default":false,"value_required":false,"value_optional":false}]},{"name":"make:notifications-table","description":"Create a migration for the notifications table","synopsis":"make:notifications-table","definition":{},"aliases":["notifications:table"],"arguments":[],"options":[]},{"name":"make:observer","description":"Create a new observer class","synopsis":"make:observer [-f|--force] [-m|--model [MODEL]] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the observer","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the observer already exists","default":false,"value_required":false,"value_optional":false},{"name":"model","description":"The model that the observer applies to","default":null,"value_required":false,"value_optional":true}]},{"name":"make:policy","description":"Create a new policy class","synopsis":"make:policy [-f|--force] [-m|--model [MODEL]] [-g|--guard [GUARD]] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the policy","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the policy already exists","default":false,"value_required":false,"value_optional":false},{"name":"model","description":"The model that the policy applies to","default":null,"value_required":false,"value_optional":true},{"name":"guard","description":"The guard that the policy relies on","default":null,"value_required":false,"value_optional":true}]},{"name":"make:provider","description":"Create a new service provider class","synopsis":"make:provider [-f|--force] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the provider","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the provider already exists","default":false,"value_required":false,"value_optional":false}]},{"name":"make:queue-batches-table","description":"Create a migration for the batches database table","synopsis":"make:queue-batches-table","definition":{},"aliases":["queue:batches-table"],"arguments":[],"options":[]},{"name":"make:queue-failed-table","description":"Create a migration for the failed queue jobs database table","synopsis":"make:queue-failed-table","definition":{},"aliases":["queue:failed-table"],"arguments":[],"options":[]},{"name":"make:queue-table","description":"Create a migration for the queue jobs database table","synopsis":"make:queue-table","definition":{},"aliases":["queue:table"],"arguments":[],"options":[]},{"name":"make:request","description":"Create a new form request class","synopsis":"make:request [-f|--force] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the request","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the request already exists","default":false,"value_required":false,"value_optional":false}]},{"name":"make:resource","description":"Create a new resource","synopsis":"make:resource [-f|--force] [-c|--collection] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the resource","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the resource already exists","default":false,"value_required":false,"value_optional":false},{"name":"collection","description":"Create a resource collection","default":false,"value_required":false,"value_optional":false}]},{"name":"make:rule","description":"Create a new validation rule","synopsis":"make:rule [-f|--force] [-i|--implicit] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the rule","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the rule already exists","default":false,"value_required":false,"value_optional":false},{"name":"implicit","description":"Generate an implicit rule","default":false,"value_required":false,"value_optional":false}]},{"name":"make:scope","description":"Create a new scope class","synopsis":"make:scope [-f|--force] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the scope","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the scope already exists","default":false,"value_required":false,"value_optional":false}]},{"name":"make:seeder","description":"Create a new seeder class","synopsis":"make:seeder <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the seeder","default":null,"required":true}],"options":[]},{"name":"make:session-table","description":"Create a migration for the session database table","synopsis":"make:session-table","definition":{},"aliases":["session:table"],"arguments":[],"options":[]},{"name":"make:test","description":"Create a new test class","synopsis":"make:test [-f|--force] [-u|--unit] [--pest] [--phpunit] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the test","default":null,"required":true}],"options":[{"name":"force","description":"Create the test even if the test already exists","default":false,"value_required":false,"value_optional":false},{"name":"unit","description":"Create a unit test","default":false,"value_required":false,"value_optional":false},{"name":"pest","description":"Create a Pest test","default":false,"value_required":false,"value_optional":false},{"name":"phpunit","description":"Create a PHPUnit test","default":false,"value_required":false,"value_optional":false}]},{"name":"make:trait","description":"Create a new trait","synopsis":"make:trait [-f|--force] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the trait","default":null,"required":true}],"options":[{"name":"force","description":"Create the trait even if the trait already exists","default":false,"value_required":false,"value_optional":false}]},{"name":"make:view","description":"Create a new view","synopsis":"make:view [--extension [EXTENSION]] [-f|--force] [--test] [--pest] [--phpunit] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the view","default":null,"required":true}],"options":[{"name":"extension","description":"The extension of the generated view","default":"blade.php","value_required":false,"value_optional":true},{"name":"force","description":"Create the view even if the view already exists","default":false,"value_required":false,"value_optional":false},{"name":"test","description":"Generate an accompanying Test test for the View","default":false,"value_required":false,"value_optional":false},{"name":"pest","description":"Generate an accompanying Pest test for the View","default":false,"value_required":false,"value_optional":false},{"name":"phpunit","description":"Generate an accompanying PHPUnit test for the View","default":false,"value_required":false,"value_optional":false}]},{"name":"make:volt","description":"Create a new Volt component","synopsis":"make:volt [--class] [--functional] [-f|--force] [--test] [--pest] [--phpunit] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the volt component","default":null,"required":true}],"options":[{"name":"class","description":"Create a class based component","default":false,"value_required":false,"value_optional":false},{"name":"functional","description":"Create a functional component","default":false,"value_required":false,"value_optional":false},{"name":"force","description":"Create the Volt component even if the component already exists","default":false,"value_required":false,"value_optional":false},{"name":"test","description":"Generate an accompanying Test test for the Volt component","default":false,"value_required":false,"value_optional":false},{"name":"pest","description":"Generate an accompanying Pest test for the Volt component","default":false,"value_required":false,"value_optional":false},{"name":"phpunit","description":"Generate an accompanying PHPUnit test for the Volt component","default":false,"value_required":false,"value_optional":false}]},{"name":"migrate","description":"Run the database migrations","synopsis":"migrate [--database [DATABASE]] [--force] [--path [PATH]] [--realpath] [--schema-path [SCHEMA-PATH]] [--pretend] [--seed] [--seeder [SEEDER]] [--step] [--graceful] [--isolated [ISOLATED]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection to use","default":null,"value_required":false,"value_optional":true},{"name":"force","description":"Force the operation to run when in production","default":false,"value_required":false,"value_optional":false},{"name":"path","description":"The path(s) to the migrations files to be executed","default":[],"value_required":false,"value_optional":true},{"name":"realpath","description":"Indicate any provided migration file paths are pre-resolved absolute paths","default":false,"value_required":false,"value_optional":false},{"name":"schema-path","description":"The path to a schema dump file","default":null,"value_required":false,"value_optional":true},{"name":"pretend","description":"Dump the SQL queries that would be run","default":false,"value_required":false,"value_optional":false},{"name":"seed","description":"Indicates if the seed task should be re-run","default":false,"value_required":false,"value_optional":false},{"name":"seeder","description":"The class name of the root seeder","default":null,"value_required":false,"value_optional":true},{"name":"step","description":"Force the migrations to be run so they can be rolled back individually","default":false,"value_required":false,"value_optional":false},{"name":"graceful","description":"Return a successful exit code even if an error occurs","default":false,"value_required":false,"value_optional":false},{"name":"isolated","description":"Do not run the command if another instance of the command is already running","default":false,"value_required":false,"value_optional":true}]},{"name":"migrate:fresh","description":"Drop all tables and re-run all migrations","synopsis":"migrate:fresh [--database [DATABASE]] [--drop-views] [--drop-types] [--force] [--path [PATH]] [--realpath] [--schema-path [SCHEMA-PATH]] [--seed] [--seeder [SEEDER]] [--step]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection to use","default":null,"value_required":false,"value_optional":true},{"name":"drop-views","description":"Drop all tables and views","default":false,"value_required":false,"value_optional":false},{"name":"drop-types","description":"Drop all tables and types (Postgres only)","default":false,"value_required":false,"value_optional":false},{"name":"force","description":"Force the operation to run when in production","default":false,"value_required":false,"value_optional":false},{"name":"path","description":"The path(s) to the migrations files to be executed","default":[],"value_required":false,"value_optional":true},{"name":"realpath","description":"Indicate any provided migration file paths are pre-resolved absolute paths","default":false,"value_required":false,"value_optional":false},{"name":"schema-path","description":"The path to a schema dump file","default":null,"value_required":false,"value_optional":true},{"name":"seed","description":"Indicates if the seed task should be re-run","default":false,"value_required":false,"value_optional":false},{"name":"seeder","description":"The class name of the root seeder","default":null,"value_required":false,"value_optional":true},{"name":"step","description":"Force the migrations to be run so they can be rolled back individually","default":false,"value_required":false,"value_optional":false}]},{"name":"migrate:install","description":"Create the migration repository","synopsis":"migrate:install [--database [DATABASE]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection to use","default":null,"value_required":false,"value_optional":true}]},{"name":"migrate:refresh","description":"Reset and re-run all migrations","synopsis":"migrate:refresh [--database [DATABASE]] [--force] [--path [PATH]] [--realpath] [--seed] [--seeder [SEEDER]] [--step [STEP]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection to use","default":null,"value_required":false,"value_optional":true},{"name":"force","description":"Force the operation to run when in production","default":false,"value_required":false,"value_optional":false},{"name":"path","description":"The path(s) to the migrations files to be executed","default":[],"value_required":false,"value_optional":true},{"name":"realpath","description":"Indicate any provided migration file paths are pre-resolved absolute paths","default":false,"value_required":false,"value_optional":false},{"name":"seed","description":"Indicates if the seed task should be re-run","default":false,"value_required":false,"value_optional":false},{"name":"seeder","description":"The class name of the root seeder","default":null,"value_required":false,"value_optional":true},{"name":"step","description":"The number of migrations to be reverted & re-run","default":null,"value_required":false,"value_optional":true}]},{"name":"migrate:reset","description":"Rollback all database migrations","synopsis":"migrate:reset [--database [DATABASE]] [--force] [--path [PATH]] [--realpath] [--pretend]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection to use","default":null,"value_required":false,"value_optional":true},{"name":"force","description":"Force the operation to run when in production","default":false,"value_required":false,"value_optional":false},{"name":"path","description":"The path(s) to the migrations files to be executed","default":[],"value_required":false,"value_optional":true},{"name":"realpath","description":"Indicate any provided migration file paths are pre-resolved absolute paths","default":false,"value_required":false,"value_optional":false},{"name":"pretend","description":"Dump the SQL queries that would be run","default":false,"value_required":false,"value_optional":false}]},{"name":"migrate:rollback","description":"Rollback the last database migration","synopsis":"migrate:rollback [--database [DATABASE]] [--force] [--path [PATH]] [--realpath] [--pretend] [--step [STEP]] [--batch BATCH]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection to use","default":null,"value_required":false,"value_optional":true},{"name":"force","description":"Force the operation to run when in production","default":false,"value_required":false,"value_optional":false},{"name":"path","description":"The path(s) to the migrations files to be executed","default":[],"value_required":false,"value_optional":true},{"name":"realpath","description":"Indicate any provided migration file paths are pre-resolved absolute paths","default":false,"value_required":false,"value_optional":false},{"name":"pretend","description":"Dump the SQL queries that would be run","default":false,"value_required":false,"value_optional":false},{"name":"step","description":"The number of migrations to be reverted","default":null,"value_required":false,"value_optional":true},{"name":"batch","description":"The batch of migrations (identified by their batch number) to be reverted","default":null,"value_required":true,"value_optional":false}]},{"name":"migrate:status","description":"Show the status of each migration","synopsis":"migrate:status [--database [DATABASE]] [--pending [PENDING]] [--path [PATH]] [--realpath]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection to use","default":null,"value_required":false,"value_optional":true},{"name":"pending","description":"Only list pending migrations","default":false,"value_required":false,"value_optional":true},{"name":"path","description":"The path(s) to the migrations files to use","default":[],"value_required":false,"value_optional":true},{"name":"realpath","description":"Indicate any provided migration file paths are pre-resolved absolute paths","default":false,"value_required":false,"value_optional":false}]},{"name":"model:prune","description":"Prune models that are no longer needed","synopsis":"model:prune [--model [MODEL]] [--except [EXCEPT]] [--path [PATH]] [--chunk [CHUNK]] [--pretend]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"model","description":"Class names of the models to be pruned","default":[],"value_required":false,"value_optional":true},{"name":"except","description":"Class names of the models to be excluded from pruning","default":[],"value_required":false,"value_optional":true},{"name":"path","description":"Absolute path(s) to directories where models are located","default":[],"value_required":false,"value_optional":true},{"name":"chunk","description":"The number of models to retrieve per chunk of models to be deleted","default":"1000","value_required":false,"value_optional":true},{"name":"pretend","description":"Display the number of prunable records found instead of deleting them","default":false,"value_required":false,"value_optional":false}]},{"name":"model:show","description":"Show information about an Eloquent model","synopsis":"model:show [--database [DATABASE]] [--json] [--] <model>","definition":{},"aliases":[],"arguments":[{"name":"model","description":"The model to show","default":null,"required":true}],"options":[{"name":"database","description":"The database connection to use","default":null,"value_required":false,"value_optional":true},{"name":"json","description":"Output the model as JSON","default":false,"value_required":false,"value_optional":false}]},{"name":"nightwatch:agent","description":"Run the Nightwatch agent.","synopsis":"nightwatch:agent [--listen-on [LISTEN-ON]] [--auth-connection-timeout [AUTH-CONNECTION-TIMEOUT]] [--auth-timeout [AUTH-TIMEOUT]] [--ingest-connection-timeout [INGEST-CONNECTION-TIMEOUT]] [--ingest-timeout [INGEST-TIMEOUT]] [--server [SERVER]] [--silent]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"listen-on","description":"","default":null,"value_required":false,"value_optional":true},{"name":"auth-connection-timeout","description":"","default":null,"value_required":false,"value_optional":true},{"name":"auth-timeout","description":"","default":null,"value_required":false,"value_optional":true},{"name":"ingest-connection-timeout","description":"","default":null,"value_required":false,"value_optional":true},{"name":"ingest-timeout","description":"","default":null,"value_required":false,"value_optional":true},{"name":"server","description":"","default":null,"value_required":false,"value_optional":true},{"name":"silent","description":"Do not output any message","default":false,"value_required":false,"value_optional":false}]},{"name":"nightwatch:status","description":"Get the current status of the Nightwatch agent.","synopsis":"nightwatch:status","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"nova:action","description":"Create a new action class","synopsis":"nova:action [--destructive] [--queued] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the action","default":null,"required":true}],"options":[{"name":"destructive","description":"Indicate that the action deletes \/ destroys resources","default":false,"value_required":false,"value_optional":false},{"name":"queued","description":"Indicates the action should be queued","default":false,"value_required":false,"value_optional":false}]},{"name":"nova:asset","description":"Create a new asset","synopsis":"nova:asset <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"","default":null,"required":true}],"options":[]},{"name":"nova:base-resource","description":"Create a new base resource class","synopsis":"nova:base-resource <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the resource","default":null,"required":true}],"options":[]},{"name":"nova:card","description":"Create a new card","synopsis":"nova:card <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"","default":null,"required":true}],"options":[]},{"name":"nova:check-license","description":"Verify your Nova license key","synopsis":"nova:check-license","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"nova:custom-filter","description":"Create a new custom filter","synopsis":"nova:custom-filter <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"","default":null,"required":true}],"options":[]},{"name":"nova:dashboard","description":"Create a new dashboard.","synopsis":"nova:dashboard <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"","default":null,"required":true}],"options":[]},{"name":"nova:field","description":"Create a new field","synopsis":"nova:field <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"","default":null,"required":true}],"options":[]},{"name":"nova:filter","description":"Create a new filter class","synopsis":"nova:filter [--boolean] [--date] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the filter","default":null,"required":true}],"options":[{"name":"boolean","description":"Indicates if the generated filter should be a boolean filter","default":false,"value_required":false,"value_optional":false},{"name":"date","description":"Indicates if the generated filter should be a date filter","default":false,"value_required":false,"value_optional":false}]},{"name":"nova:install","description":"Install all of the Nova resources","synopsis":"nova:install","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"nova:lens","description":"Create a new lens class","synopsis":"nova:lens <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the lens","default":null,"required":true}],"options":[]},{"name":"nova:partition","description":"Create a new metric (partition) class","synopsis":"nova:partition <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the metric","default":null,"required":true}],"options":[]},{"name":"nova:policy","description":"Create a new policy class","synopsis":"nova:policy [-f|--force] [-m|--resource [RESOURCE]] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the policy","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the policy already exists","default":false,"value_required":false,"value_optional":false},{"name":"resource","description":"The resource that the policy applies to","default":null,"value_required":false,"value_optional":true}]},{"name":"nova:progress","description":"Create a new metric (progress) class","synopsis":"nova:progress <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the metric","default":null,"required":true}],"options":[]},{"name":"nova:publish","description":"Publish all of the Nova resources","synopsis":"nova:publish [-f|--force] [--fortify|--no-fortify]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"force","description":"Overwrite any existing files","default":false,"value_required":false,"value_optional":false},{"name":"fortify","description":"Publish Laravel Fortify features","default":null,"value_required":false,"value_optional":false}]},{"name":"nova:repeatable","description":"Create a new repeatable class","synopsis":"nova:repeatable [-m|--model MODEL] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the repeatable","default":null,"required":true}],"options":[{"name":"model","description":"The model class being represented.","default":null,"value_required":true,"value_optional":false}]},{"name":"nova:resource","description":"Create a new resource class","synopsis":"nova:resource [-m|--model MODEL] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the resource","default":null,"required":true}],"options":[{"name":"model","description":"The model class being represented.","default":null,"value_required":true,"value_optional":false}]},{"name":"nova:resource-tool","description":"Create a new resource tool","synopsis":"nova:resource-tool <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"","default":null,"required":true}],"options":[]},{"name":"nova:stubs","description":"Publish all stubs that are available for customization","synopsis":"nova:stubs [--force]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"force","description":"Overwrite any existing files","default":false,"value_required":false,"value_optional":false}]},{"name":"nova:table","description":"Create a new metric (table) class","synopsis":"nova:table <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the metric","default":null,"required":true}],"options":[]},{"name":"nova:tool","description":"Create a new tool","synopsis":"nova:tool <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"","default":null,"required":true}],"options":[]},{"name":"nova:translate","description":"Create translation files for Nova","synopsis":"nova:translate [--force] [--] <language>","definition":{},"aliases":[],"arguments":[{"name":"language","description":"","default":null,"required":true}],"options":[{"name":"force","description":"Overwrite any existing files","default":false,"value_required":false,"value_optional":false}]},{"name":"nova:trend","description":"Create a new metric (trend) class","synopsis":"nova:trend <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the metric","default":null,"required":true}],"options":[]},{"name":"nova:user","description":"Create a new user","synopsis":"nova:user","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"nova:value","description":"Create a new metric (single value) class","synopsis":"nova:value <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the metric","default":null,"required":true}],"options":[]},{"name":"octane:frankenphp","description":"Start the Octane FrankenPHP server","synopsis":"octane:frankenphp [--host [HOST]] [--port [PORT]] [--admin-host [ADMIN-HOST]] [--admin-port [ADMIN-PORT]] [--workers [WORKERS]] [--max-requests [MAX-REQUESTS]] [--caddyfile [CADDYFILE]] [--https] [--http-redirect] [--watch] [--poll] [--log-level [LOG-LEVEL]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"host","description":"The IP address the server should bind to","default":"127.0.0.1","value_required":false,"value_optional":true},{"name":"port","description":"The port the server should be available on","default":null,"value_required":false,"value_optional":true},{"name":"admin-host","description":"The host the admin server should be available on","default":"localhost","value_required":false,"value_optional":true},{"name":"admin-port","description":"The port the admin server should be available on","default":"2019","value_required":false,"value_optional":true},{"name":"workers","description":"The number of workers that should be available to handle requests","default":"auto","value_required":false,"value_optional":true},{"name":"max-requests","description":"The number of requests to process before reloading the server","default":"500","value_required":false,"value_optional":true},{"name":"caddyfile","description":"The path to the FrankenPHP Caddyfile file","default":null,"value_required":false,"value_optional":true},{"name":"https","description":"Enable HTTPS, HTTP\/2, and HTTP\/3, and automatically generate and renew certificates","default":false,"value_required":false,"value_optional":false},{"name":"http-redirect","description":"Enable HTTP to HTTPS redirection (only enabled if --https is passed)","default":false,"value_required":false,"value_optional":false},{"name":"watch","description":"Automatically reload the server when the application is modified","default":false,"value_required":false,"value_optional":false},{"name":"poll","description":"Use file system polling while watching in order to watch files over a network","default":false,"value_required":false,"value_optional":false},{"name":"log-level","description":"Log messages at or above the specified log level","default":null,"value_required":false,"value_optional":true}]},{"name":"octane:install","description":"Install the Octane components and resources","synopsis":"octane:install [--server [SERVER]] [--force]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"server","description":"The server that should be used to serve the application","default":null,"value_required":false,"value_optional":true},{"name":"force","description":"Overwrite any existing configuration files","default":false,"value_required":false,"value_optional":false}]},{"name":"octane:reload","description":"Reload the Octane workers","synopsis":"octane:reload [--server [SERVER]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"server","description":"The server that is running the application","default":null,"value_required":false,"value_optional":true}]},{"name":"octane:roadrunner","description":"Start the Octane RoadRunner server","synopsis":"octane:roadrunner [--host [HOST]] [--port [PORT]] [--rpc-host [RPC-HOST]] [--rpc-port [RPC-PORT]] [--workers [WORKERS]] [--max-requests [MAX-REQUESTS]] [--rr-config [RR-CONFIG]] [--watch] [--poll] [--log-level [LOG-LEVEL]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"host","description":"The IP address the server should bind to","default":null,"value_required":false,"value_optional":true},{"name":"port","description":"The port the server should be available on","default":null,"value_required":false,"value_optional":true},{"name":"rpc-host","description":"The RPC IP address the server should bind to","default":null,"value_required":false,"value_optional":true},{"name":"rpc-port","description":"The RPC port the server should be available on","default":null,"value_required":false,"value_optional":true},{"name":"workers","description":"The number of workers that should be available to handle requests","default":"auto","value_required":false,"value_optional":true},{"name":"max-requests","description":"The number of requests to process before reloading the server","default":"500","value_required":false,"value_optional":true},{"name":"rr-config","description":"The path to the RoadRunner .rr.yaml file","default":null,"value_required":false,"value_optional":true},{"name":"watch","description":"Automatically reload the server when the application is modified","default":false,"value_required":false,"value_optional":false},{"name":"poll","description":"Use file system polling while watching in order to watch files over a network","default":false,"value_required":false,"value_optional":false},{"name":"log-level","description":"Log messages at or above the specified log level","default":null,"value_required":false,"value_optional":true}]},{"name":"octane:start","description":"Start the Octane server","synopsis":"octane:start [--server [SERVER]] [--host [HOST]] [--port [PORT]] [--admin-port [ADMIN-PORT]] [--rpc-host [RPC-HOST]] [--rpc-port [RPC-PORT]] [--workers [WORKERS]] [--task-workers [TASK-WORKERS]] [--max-requests [MAX-REQUESTS]] [--rr-config [RR-CONFIG]] [--caddyfile [CADDYFILE]] [--https] [--http-redirect] [--watch] [--poll] [--log-level [LOG-LEVEL]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"server","description":"The server that should be used to serve the application","default":null,"value_required":false,"value_optional":true},{"name":"host","description":"The IP address the server should bind to","default":null,"value_required":false,"value_optional":true},{"name":"port","description":"The port the server should be available on [default: \"8000\"]","default":null,"value_required":false,"value_optional":true},{"name":"admin-port","description":"The port the admin server should be available on [FrankenPHP only]","default":null,"value_required":false,"value_optional":true},{"name":"rpc-host","description":"The RPC IP address the server should bind to","default":null,"value_required":false,"value_optional":true},{"name":"rpc-port","description":"The RPC port the server should be available on","default":null,"value_required":false,"value_optional":true},{"name":"workers","description":"The number of workers that should be available to handle requests","default":null,"value_required":false,"value_optional":true},{"name":"task-workers","description":"The number of task workers that should be available to handle tasks","default":null,"value_required":false,"value_optional":true},{"name":"max-requests","description":"The number of requests to process before reloading the server","default":null,"value_required":false,"value_optional":true},{"name":"rr-config","description":"The path to the RoadRunner .rr.yaml file","default":null,"value_required":false,"value_optional":true},{"name":"caddyfile","description":"The path to the FrankenPHP Caddyfile file","default":null,"value_required":false,"value_optional":true},{"name":"https","description":"Enable HTTPS, HTTP\/2, and HTTP\/3, and automatically generate and renew certificates [FrankenPHP only]","default":false,"value_required":false,"value_optional":false},{"name":"http-redirect","description":"Enable HTTP to HTTPS redirection (only enabled if --https is passed) [FrankenPHP only]","default":false,"value_required":false,"value_optional":false},{"name":"watch","description":"Automatically reload the server when the application is modified","default":false,"value_required":false,"value_optional":false},{"name":"poll","description":"Use file system polling while watching in order to watch files over a network","default":false,"value_required":false,"value_optional":false},{"name":"log-level","description":"Log messages at or above the specified log level","default":null,"value_required":false,"value_optional":true}]},{"name":"octane:status","description":"Get the current status of the Octane server","synopsis":"octane:status [--server [SERVER]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"server","description":"The server that is running the application","default":null,"value_required":false,"value_optional":true}]},{"name":"octane:stop","description":"Stop the Octane server","synopsis":"octane:stop [--server [SERVER]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"server","description":"The server that is running the application","default":null,"value_required":false,"value_optional":true}]},{"name":"octane:swoole","description":"Start the Octane Swoole server","synopsis":"octane:swoole [--host [HOST]] [--port [PORT]] [--workers [WORKERS]] [--task-workers [TASK-WORKERS]] [--max-requests [MAX-REQUESTS]] [--watch] [--poll]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"host","description":"The IP address the server should bind to","default":null,"value_required":false,"value_optional":true},{"name":"port","description":"The port the server should be available on","default":null,"value_required":false,"value_optional":true},{"name":"workers","description":"The number of workers that should be available to handle requests","default":"auto","value_required":false,"value_optional":true},{"name":"task-workers","description":"The number of task workers that should be available to handle tasks","default":"auto","value_required":false,"value_optional":true},{"name":"max-requests","description":"The number of requests to process before reloading the server","default":"500","value_required":false,"value_optional":true},{"name":"watch","description":"Automatically reload the server when the application is modified","default":false,"value_required":false,"value_optional":false},{"name":"poll","description":"Use file system polling while watching in order to watch files over a network","default":false,"value_required":false,"value_optional":false}]},{"name":"optimize","description":"Cache framework bootstrap, configuration, and metadata to increase performance","synopsis":"optimize [-e|--except [EXCEPT]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"except","description":"Do not run the commands matching the key or name","default":null,"value_required":false,"value_optional":true}]},{"name":"optimize:clear","description":"Remove the cached bootstrap files","synopsis":"optimize:clear [-e|--except [EXCEPT]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"except","description":"The commands to skip","default":null,"value_required":false,"value_optional":true}]},{"name":"package:discover","description":"Rebuild the cached package manifest","synopsis":"package:discover","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"pail","description":"Tails the application logs.","synopsis":"pail [--filter [FILTER]] [--message [MESSAGE]] [--level [LEVEL]] [--auth [AUTH]] [--user [USER]] [--timeout [TIMEOUT]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"filter","description":"Filter the logs by the given value","default":null,"value_required":false,"value_optional":true},{"name":"message","description":"Filter the logs by the given message","default":null,"value_required":false,"value_optional":true},{"name":"level","description":"Filter the logs by the given level","default":null,"value_required":false,"value_optional":true},{"name":"auth","description":"Filter the logs by the given authenticated ID","default":null,"value_required":false,"value_optional":true},{"name":"user","description":"Filter the logs by the given authenticated ID (alias for --auth)","default":null,"value_required":false,"value_optional":true},{"name":"timeout","description":"The maximum execution time in seconds","default":"3600","value_required":false,"value_optional":true}]},{"name":"passport:client","description":"Create a client for issuing access tokens","synopsis":"passport:client [--personal] [--password] [--client] [--implicit] [--device] [--name [NAME]] [--provider [PROVIDER]] [--redirect_uri [REDIRECT_URI]] [--public]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"personal","description":"Create a personal access token client","default":false,"value_required":false,"value_optional":false},{"name":"password","description":"Create a password grant client","default":false,"value_required":false,"value_optional":false},{"name":"client","description":"Create a client credentials grant client","default":false,"value_required":false,"value_optional":false},{"name":"implicit","description":"Create an implicit grant client","default":false,"value_required":false,"value_optional":false},{"name":"device","description":"Create a device authorization grant client","default":false,"value_required":false,"value_optional":false},{"name":"name","description":"The name of the client","default":null,"value_required":false,"value_optional":true},{"name":"provider","description":"The name of the user provider","default":null,"value_required":false,"value_optional":true},{"name":"redirect_uri","description":"The URI to redirect to after authorization","default":null,"value_required":false,"value_optional":true},{"name":"public","description":"Create a public client (without secret)","default":false,"value_required":false,"value_optional":false}]},{"name":"passport:hash","description":"Hash all of the existing secrets in the clients table","synopsis":"passport:hash [--force]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"force","description":"Force the operation to run without confirmation prompt","default":false,"value_required":false,"value_optional":false}]},{"name":"passport:install","description":"Run the commands necessary to prepare Passport for use","synopsis":"passport:install [--force] [--length [LENGTH]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"force","description":"Overwrite keys they already exist","default":false,"value_required":false,"value_optional":false},{"name":"length","description":"The length of the private key","default":"4096","value_required":false,"value_optional":true}]},{"name":"passport:keys","description":"Create the encryption keys for API authentication","synopsis":"passport:keys [--force] [--length [LENGTH]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"force","description":"Overwrite keys they already exist","default":false,"value_required":false,"value_optional":false},{"name":"length","description":"The length of the private key","default":"4096","value_required":false,"value_optional":true}]},{"name":"passport:purge","description":"Purge revoked and \/ or expired tokens and authentication codes","synopsis":"passport:purge [--revoked] [--expired] [--hours [HOURS]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"revoked","description":"Only purge revoked tokens and authentication codes","default":false,"value_required":false,"value_optional":false},{"name":"expired","description":"Only purge expired tokens and authentication codes","default":false,"value_required":false,"value_optional":false},{"name":"hours","description":"The number of hours to retain expired tokens","default":"168","value_required":false,"value_optional":true}]},{"name":"pennant:feature","description":"Create a new feature class","synopsis":"pennant:feature [-f|--force] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the feature","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the feature already exists","default":false,"value_required":false,"value_optional":false}]},{"name":"pennant:purge","description":"Delete Pennant features from storage","synopsis":"pennant:purge [--except [EXCEPT]] [--except-registered] [--store [STORE]] [--] [<features>...]","definition":{},"aliases":["pennant:clear"],"arguments":[{"name":"features","description":"The features to purge","default":[],"required":false}],"options":[{"name":"except","description":"The features that should be excluded from purging","default":[],"value_required":false,"value_optional":true},{"name":"except-registered","description":"Purge all features except those registered","default":false,"value_required":false,"value_optional":false},{"name":"store","description":"The store to purge the features from","default":null,"value_required":false,"value_optional":true}]},{"name":"pulse:check","description":"Take a snapshot of the current server's pulse","synopsis":"pulse:check [--once]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"once","description":"Take a single snapshot","default":false,"value_required":false,"value_optional":false}]},{"name":"pulse:clear","description":"Delete all Pulse data from storage","synopsis":"pulse:clear [--type [TYPE]] [--force]","definition":{},"aliases":["pulse:purge"],"arguments":[],"options":[{"name":"type","description":"Only clear the specified type(s)","default":[],"value_required":false,"value_optional":true},{"name":"force","description":"Force the operation to run when in production","default":false,"value_required":false,"value_optional":false}]},{"name":"pulse:restart","description":"Restart any running \"work\" and \"check\" commands","synopsis":"pulse:restart","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"pulse:work","description":"Process incoming Pulse data from the ingest stream","synopsis":"pulse:work [--stop-when-empty]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"stop-when-empty","description":"Stop when the stream is empty","default":false,"value_required":false,"value_optional":false}]},{"name":"queue:clear","description":"Delete all of the jobs from the specified queue","synopsis":"queue:clear [--queue [QUEUE]] [--force] [--] [<connection>]","definition":{},"aliases":[],"arguments":[{"name":"connection","description":"The name of the queue connection to clear","default":null,"required":false}],"options":[{"name":"queue","description":"The name of the queue to clear","default":null,"value_required":false,"value_optional":true},{"name":"force","description":"Force the operation to run when in production","default":false,"value_required":false,"value_optional":false}]},{"name":"queue:failed","description":"List all of the failed queue jobs","synopsis":"queue:failed","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"queue:flush","description":"Flush all of the failed queue jobs","synopsis":"queue:flush [--hours [HOURS]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"hours","description":"The number of hours to retain failed job data","default":null,"value_required":false,"value_optional":true}]},{"name":"queue:forget","description":"Delete a failed queue job","synopsis":"queue:forget <id>","definition":{},"aliases":[],"arguments":[{"name":"id","description":"The ID of the failed job","default":null,"required":true}],"options":[]},{"name":"queue:listen","description":"Listen to a given queue","synopsis":"queue:listen [--name [NAME]] [--delay [DELAY]] [--backoff [BACKOFF]] [--force] [--memory [MEMORY]] [--queue [QUEUE]] [--sleep [SLEEP]] [--rest [REST]] [--timeout [TIMEOUT]] [--tries [TRIES]] [--] [<connection>]","definition":{},"aliases":[],"arguments":[{"name":"connection","description":"The name of connection","default":null,"required":false}],"options":[{"name":"name","description":"The name of the worker","default":"default","value_required":false,"value_optional":true},{"name":"delay","description":"The number of seconds to delay failed jobs (Deprecated)","default":"0","value_required":false,"value_optional":true},{"name":"backoff","description":"The number of seconds to wait before retrying a job that encountered an uncaught exception","default":"0","value_required":false,"value_optional":true},{"name":"force","description":"Force the worker to run even in maintenance mode","default":false,"value_required":false,"value_optional":false},{"name":"memory","description":"The memory limit in megabytes","default":"128","value_required":false,"value_optional":true},{"name":"queue","description":"The queue to listen on","default":null,"value_required":false,"value_optional":true},{"name":"sleep","description":"Number of seconds to sleep when no job is available","default":"3","value_required":false,"value_optional":true},{"name":"rest","description":"Number of seconds to rest between jobs","default":"0","value_required":false,"value_optional":true},{"name":"timeout","description":"The number of seconds a child process can run","default":"60","value_required":false,"value_optional":true},{"name":"tries","description":"Number of times to attempt a job before logging it failed","default":"1","value_required":false,"value_optional":true}]},{"name":"queue:monitor","description":"Monitor the size of the specified queues","synopsis":"queue:monitor [--max [MAX]] [--json] [--] <queues>","definition":{},"aliases":[],"arguments":[{"name":"queues","description":"The names of the queues to monitor","default":null,"required":true}],"options":[{"name":"max","description":"The maximum number of jobs that can be on the queue before an event is dispatched","default":"1000","value_required":false,"value_optional":true},{"name":"json","description":"Output the queue size as JSON","default":false,"value_required":false,"value_optional":false}]},{"name":"queue:prune-batches","description":"Prune stale entries from the batches database","synopsis":"queue:prune-batches [--hours [HOURS]] [--unfinished [UNFINISHED]] [--cancelled [CANCELLED]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"hours","description":"The number of hours to retain batch data","default":"24","value_required":false,"value_optional":true},{"name":"unfinished","description":"The number of hours to retain unfinished batch data","default":null,"value_required":false,"value_optional":true},{"name":"cancelled","description":"The number of hours to retain cancelled batch data","default":null,"value_required":false,"value_optional":true}]},{"name":"queue:prune-failed","description":"Prune stale entries from the failed jobs table","synopsis":"queue:prune-failed [--hours [HOURS]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"hours","description":"The number of hours to retain failed jobs data","default":"24","value_required":false,"value_optional":true}]},{"name":"queue:restart","description":"Restart queue worker daemons after their current job","synopsis":"queue:restart","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"queue:retry","description":"Retry a failed queue job","synopsis":"queue:retry [--queue [QUEUE]] [--range [RANGE]] [--] [<id>...]","definition":{},"aliases":[],"arguments":[{"name":"id","description":"The ID of the failed job or \"all\" to retry all jobs","default":[],"required":false}],"options":[{"name":"queue","description":"Retry all of the failed jobs for the specified queue","default":null,"value_required":false,"value_optional":true},{"name":"range","description":"Range of job IDs (numeric) to be retried (e.g. 1-5)","default":[],"value_required":false,"value_optional":true}]},{"name":"queue:retry-batch","description":"Retry the failed jobs for a batch","synopsis":"queue:retry-batch [--isolated [ISOLATED]] [--] [<id>...]","definition":{},"aliases":[],"arguments":[{"name":"id","description":"The ID of the batch whose failed jobs should be retried","default":[],"required":false}],"options":[{"name":"isolated","description":"Do not run the command if another instance of the command is already running","default":false,"value_required":false,"value_optional":true}]},{"name":"queue:work","description":"Start processing jobs on the queue as a daemon","synopsis":"queue:work [--name [NAME]] [--queue [QUEUE]] [--daemon] [--once] [--stop-when-empty] [--delay [DELAY]] [--backoff [BACKOFF]] [--max-jobs [MAX-JOBS]] [--max-time [MAX-TIME]] [--force] [--memory [MEMORY]] [--sleep [SLEEP]] [--rest [REST]] [--timeout [TIMEOUT]] [--tries [TRIES]] [--json] [--] [<connection>]","definition":{},"aliases":[],"arguments":[{"name":"connection","description":"The name of the queue connection to work","default":null,"required":false}],"options":[{"name":"name","description":"The name of the worker","default":"default","value_required":false,"value_optional":true},{"name":"queue","description":"The names of the queues to work","default":null,"value_required":false,"value_optional":true},{"name":"daemon","description":"Run the worker in daemon mode (Deprecated)","default":false,"value_required":false,"value_optional":false},{"name":"once","description":"Only process the next job on the queue","default":false,"value_required":false,"value_optional":false},{"name":"stop-when-empty","description":"Stop when the queue is empty","default":false,"value_required":false,"value_optional":false},{"name":"delay","description":"The number of seconds to delay failed jobs (Deprecated)","default":"0","value_required":false,"value_optional":true},{"name":"backoff","description":"The number of seconds to wait before retrying a job that encountered an uncaught exception","default":"0","value_required":false,"value_optional":true},{"name":"max-jobs","description":"The number of jobs to process before stopping","default":"0","value_required":false,"value_optional":true},{"name":"max-time","description":"The maximum number of seconds the worker should run","default":"0","value_required":false,"value_optional":true},{"name":"force","description":"Force the worker to run even in maintenance mode","default":false,"value_required":false,"value_optional":false},{"name":"memory","description":"The memory limit in megabytes","default":"128","value_required":false,"value_optional":true},{"name":"sleep","description":"Number of seconds to sleep when no job is available","default":"3","value_required":false,"value_optional":true},{"name":"rest","description":"Number of seconds to rest between jobs","default":"0","value_required":false,"value_optional":true},{"name":"timeout","description":"The number of seconds a child process can run","default":"60","value_required":false,"value_optional":true},{"name":"tries","description":"Number of times to attempt a job before logging it failed","default":"1","value_required":false,"value_optional":true},{"name":"json","description":"Output the queue worker information as JSON","default":false,"value_required":false,"value_optional":false}]},{"name":"reverb:install","description":"Install the Reverb dependencies","synopsis":"reverb:install","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"reverb:restart","description":"Restart the Reverb server","synopsis":"reverb:restart","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"reverb:start","description":"Start the Reverb server","synopsis":"reverb:start [--host [HOST]] [--port [PORT]] [--path [PATH]] [--hostname [HOSTNAME]] [--debug]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"host","description":"The IP address the server should bind to","default":null,"value_required":false,"value_optional":true},{"name":"port","description":"The port the server should listen on","default":null,"value_required":false,"value_optional":true},{"name":"path","description":"The path the server should prefix to all routes","default":null,"value_required":false,"value_optional":true},{"name":"hostname","description":"The hostname the server is accessible from","default":null,"value_required":false,"value_optional":true},{"name":"debug","description":"Indicates whether debug messages should be displayed in the terminal","default":false,"value_required":false,"value_optional":false}]},{"name":"route:cache","description":"Create a route cache file for faster route registration","synopsis":"route:cache","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"route:clear","description":"Remove the route cache file","synopsis":"route:clear","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"route:list","description":"List all registered routes","synopsis":"route:list [--json] [--method [METHOD]] [--action [ACTION]] [--name [NAME]] [--domain [DOMAIN]] [--path [PATH]] [--except-path [EXCEPT-PATH]] [-r|--reverse] [--sort [SORT]] [--except-vendor] [--only-vendor]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"json","description":"Output the route list as JSON","default":false,"value_required":false,"value_optional":false},{"name":"method","description":"Filter the routes by method","default":null,"value_required":false,"value_optional":true},{"name":"action","description":"Filter the routes by action","default":null,"value_required":false,"value_optional":true},{"name":"name","description":"Filter the routes by name","default":null,"value_required":false,"value_optional":true},{"name":"domain","description":"Filter the routes by domain","default":null,"value_required":false,"value_optional":true},{"name":"path","description":"Only show routes matching the given path pattern","default":null,"value_required":false,"value_optional":true},{"name":"except-path","description":"Do not display the routes matching the given path pattern","default":null,"value_required":false,"value_optional":true},{"name":"reverse","description":"Reverse the ordering of the routes","default":false,"value_required":false,"value_optional":false},{"name":"sort","description":"The column (domain, method, uri, name, action, middleware, definition) to sort by","default":"uri","value_required":false,"value_optional":true},{"name":"except-vendor","description":"Do not display routes defined by vendor packages","default":false,"value_required":false,"value_optional":false},{"name":"only-vendor","description":"Only display routes defined by vendor packages","default":false,"value_required":false,"value_optional":false}]},{"name":"sail:add","description":"Add a service to an existing Sail installation","synopsis":"sail:add [<services>]","definition":{},"aliases":[],"arguments":[{"name":"services","description":"The services that should be added","default":null,"required":false}],"options":[]},{"name":"sail:install","description":"Install Laravel Sail's default Docker Compose file","synopsis":"sail:install [--with [WITH]] [--devcontainer] [--php [PHP]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"with","description":"The services that should be included in the installation","default":null,"value_required":false,"value_optional":true},{"name":"devcontainer","description":"Create a .devcontainer configuration directory","default":false,"value_required":false,"value_optional":false},{"name":"php","description":"The PHP version that should be used","default":"8.4","value_required":false,"value_optional":true}]},{"name":"sail:publish","description":"Publish the Laravel Sail Docker files","synopsis":"sail:publish","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"sanctum:prune-expired","description":"Prune tokens expired for more than specified number of hours","synopsis":"sanctum:prune-expired [--hours [HOURS]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"hours","description":"The number of hours to retain expired Sanctum tokens","default":"24","value_required":false,"value_optional":true}]},{"name":"schedule:clear-cache","description":"Delete the cached mutex files created by scheduler","synopsis":"schedule:clear-cache","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"schedule:finish","description":"Handle the completion of a scheduled command","synopsis":"schedule:finish <id> [<code>]","definition":{},"aliases":[],"arguments":[{"name":"id","description":"","default":null,"required":true},{"name":"code","description":"","default":"0","required":false}],"options":[]},{"name":"schedule:interrupt","description":"Interrupt the current schedule run","synopsis":"schedule:interrupt","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"schedule:list","description":"List all scheduled tasks","synopsis":"schedule:list [--timezone [TIMEZONE]] [--next] [--json]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"timezone","description":"The timezone that times should be displayed in","default":null,"value_required":false,"value_optional":true},{"name":"next","description":"Sort the listed tasks by their next due date","default":false,"value_required":false,"value_optional":false},{"name":"json","description":"Output the scheduled tasks as JSON","default":false,"value_required":false,"value_optional":false}]},{"name":"schedule:run","description":"Run the scheduled commands","synopsis":"schedule:run [--whisper]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"whisper","description":"Do not output message indicating that no jobs were ready to run","default":false,"value_required":false,"value_optional":false}]},{"name":"schedule:test","description":"Run a scheduled command","synopsis":"schedule:test [--name [NAME]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"name","description":"The name of the scheduled command to run","default":null,"value_required":false,"value_optional":true}]},{"name":"schedule:work","description":"Start the schedule worker","synopsis":"schedule:work [--run-output-file [RUN-OUTPUT-FILE]] [--whisper]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"run-output-file","description":"The file to direct <info>schedule:run<\/info> output to","default":null,"value_required":false,"value_optional":true},{"name":"whisper","description":"Do not output message indicating that no jobs were ready to run","default":false,"value_required":false,"value_optional":false}]},{"name":"schema:dump","description":"Dump the given database schema","synopsis":"schema:dump [--database [DATABASE]] [--path [PATH]] [--prune]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection to use","default":null,"value_required":false,"value_optional":true},{"name":"path","description":"The path where the schema dump file should be stored","default":null,"value_required":false,"value_optional":true},{"name":"prune","description":"Delete all existing migration files","default":false,"value_required":false,"value_optional":false}]},{"name":"scout:delete-all-indexes","description":"Delete all indexes","synopsis":"scout:delete-all-indexes","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"scout:delete-index","description":"Delete an index","synopsis":"scout:delete-index <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the index","default":null,"required":true}],"options":[]},{"name":"scout:flush","description":"Flush all of the model's records from the index","synopsis":"scout:flush <model>","definition":{},"aliases":[],"arguments":[{"name":"model","description":"Class name of the model to flush","default":null,"required":true}],"options":[]},{"name":"scout:import","description":"Import the given model into the search index","synopsis":"scout:import [--fresh] [-c|--chunk [CHUNK]] [--] <model>","definition":{},"aliases":[],"arguments":[{"name":"model","description":"Class name of model to bulk import","default":null,"required":true}],"options":[{"name":"fresh","description":"Flush the index before importing","default":false,"value_required":false,"value_optional":false},{"name":"chunk","description":"The number of records to import at a time (Defaults to configuration value: `scout.chunk.searchable`)","default":null,"value_required":false,"value_optional":true}]},{"name":"scout:index","description":"Create an index","synopsis":"scout:index [-k|--key [KEY]] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the index","default":null,"required":true}],"options":[{"name":"key","description":"The name of the primary key","default":null,"value_required":false,"value_optional":true}]},{"name":"scout:queue-import","description":"Import the given model into the search index via chunked, queued jobs","synopsis":"scout:queue-import [--min [MIN]] [--max [MAX]] [-c|--chunk [CHUNK]] [--queue [QUEUE]] [--] <model>","definition":{},"aliases":[],"arguments":[{"name":"model","description":"Class name of model to bulk queue","default":null,"required":true}],"options":[{"name":"min","description":"The minimum ID to start queuing from","default":null,"value_required":false,"value_optional":true},{"name":"max","description":"The maximum ID to queue up to","default":null,"value_required":false,"value_optional":true},{"name":"chunk","description":"The number of records to queue in a single job (Defaults to configuration value: `scout.chunk.searchable`)","default":null,"value_required":false,"value_optional":true},{"name":"queue","description":"The queue that should be used (Defaults to configuration value: `scout.queue.queue`)","default":null,"value_required":false,"value_optional":true}]},{"name":"scout:sync-index-settings","description":"Sync your configured index settings with your search engine (Meilisearch)","synopsis":"scout:sync-index-settings [--driver [DRIVER]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"driver","description":"The name of the search engine driver (Defaults to configuration value: `scout.driver`)","default":null,"value_required":false,"value_optional":true}]},{"name":"serve","description":"Serve the application on the PHP development server","synopsis":"serve [--host [HOST]] [--port [PORT]] [--tries [TRIES]] [--no-reload]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"host","description":"The host address to serve the application on","default":"127.0.0.1","value_required":false,"value_optional":true},{"name":"port","description":"The port to serve the application on","default":null,"value_required":false,"value_optional":true},{"name":"tries","description":"The max number of ports to attempt to serve from","default":10,"value_required":false,"value_optional":true},{"name":"no-reload","description":"Do not reload the development server on .env file changes","default":false,"value_required":false,"value_optional":false}]},{"name":"spark:install","description":"Install all of the Spark resources","synopsis":"spark:install","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"storage:link","description":"Create the symbolic links configured for the application","synopsis":"storage:link [--relative] [--force]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"relative","description":"Create the symbolic link using relative paths","default":false,"value_required":false,"value_optional":false},{"name":"force","description":"Recreate existing symbolic links","default":false,"value_required":false,"value_optional":false}]},{"name":"storage:unlink","description":"Delete existing symbolic links configured for the application","synopsis":"storage:unlink","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"stub:publish","description":"Publish all stubs that are available for customization","synopsis":"stub:publish [--existing] [--force]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"existing","description":"Publish and overwrite only the files that have already been published","default":false,"value_required":false,"value_optional":false},{"name":"force","description":"Overwrite any existing files","default":false,"value_required":false,"value_optional":false}]},{"name":"telescope:clear","description":"Delete all Telescope data from storage","synopsis":"telescope:clear","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"telescope:install","description":"Install all of the Telescope resources","synopsis":"telescope:install","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"telescope:pause","description":"Pause all Telescope watchers","synopsis":"telescope:pause","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"telescope:prune","description":"Prune stale entries from the Telescope database","synopsis":"telescope:prune [--hours [HOURS]] [--keep-exceptions]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"hours","description":"The number of hours to retain Telescope data","default":"24","value_required":false,"value_optional":true},{"name":"keep-exceptions","description":"Retain exception data","default":false,"value_required":false,"value_optional":false}]},{"name":"telescope:publish","description":"Publish all of the Telescope resources","synopsis":"telescope:publish [--force]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"force","description":"Overwrite any existing files","default":false,"value_required":false,"value_optional":false}]},{"name":"telescope:resume","description":"Unpause all Telescope watchers","synopsis":"telescope:resume","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"test","description":"Run the application tests","synopsis":"test [--without-tty] [--compact] [--coverage] [--min [MIN]] [-p|--parallel] [--profile] [--recreate-databases] [--drop-databases] [--without-databases]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"without-tty","description":"Disable output to TTY","default":false,"value_required":false,"value_optional":false},{"name":"compact","description":"Indicates whether the compact printer should be used","default":false,"value_required":false,"value_optional":false},{"name":"coverage","description":"Indicates whether code coverage information should be collected","default":false,"value_required":false,"value_optional":false},{"name":"min","description":"Indicates the minimum threshold enforcement for code coverage","default":null,"value_required":false,"value_optional":true},{"name":"parallel","description":"Indicates if the tests should run in parallel","default":false,"value_required":false,"value_optional":false},{"name":"profile","description":"Lists top 10 slowest tests","default":false,"value_required":false,"value_optional":false},{"name":"recreate-databases","description":"Indicates if the test databases should be re-created","default":false,"value_required":false,"value_optional":false},{"name":"drop-databases","description":"Indicates if the test databases should be dropped","default":false,"value_required":false,"value_optional":false},{"name":"without-databases","description":"Indicates if database configuration should be performed","default":false,"value_required":false,"value_optional":false}]},{"name":"tinker","description":"Interact with your application","synopsis":"tinker [--execute [EXECUTE]] [--] [<include>...]","definition":{},"aliases":[],"arguments":[{"name":"include","description":"Include file(s) before starting tinker","default":[],"required":false}],"options":[{"name":"execute","description":"Execute the given code using Tinker","default":null,"value_required":false,"value_optional":true}]},{"name":"up","description":"Bring the application out of maintenance mode","synopsis":"up","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"vapor:handle","description":"","synopsis":"vapor:handle <payload>","definition":{},"aliases":[],"arguments":[{"name":"payload","description":"","default":null,"required":true}],"options":[]},{"name":"vapor:health-check","description":"Check the health of the Vapor application","synopsis":"vapor:health-check","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"vapor:queue-failed","description":"List all of the failed queue jobs","synopsis":"vapor:queue-failed [--limit [LIMIT]] [--page [PAGE]] [--id [ID]] [--queue [QUEUE]] [--query [QUERY]] [--start [START]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"limit","description":"The number of failed jobs to return","default":null,"value_required":false,"value_optional":true},{"name":"page","description":"The page of failed jobs to return","default":"1","value_required":false,"value_optional":true},{"name":"id","description":"The job ID filter by","default":null,"value_required":false,"value_optional":true},{"name":"queue","description":"The queue to filter by","default":null,"value_required":false,"value_optional":true},{"name":"query","description":"The search query to filter by","default":null,"value_required":false,"value_optional":true},{"name":"start","description":"The start timestamp to filter by","default":null,"value_required":false,"value_optional":true}]},{"name":"vapor:schedule","description":"Run the scheduled commands at the beginning of every minute","synopsis":"vapor:schedule","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"vapor:work","description":"Process a Vapor job","synopsis":"vapor:work [--delay [DELAY]] [--timeout [TIMEOUT]] [--tries [TRIES]] [--force]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"delay","description":"The number of seconds to delay failed jobs","default":"0","value_required":false,"value_optional":true},{"name":"timeout","description":"The number of seconds a child process can run","default":"0","value_required":false,"value_optional":true},{"name":"tries","description":"Number of times to attempt a job before logging it failed","default":"0","value_required":false,"value_optional":true},{"name":"force","description":"Force the worker to run even in maintenance mode","default":false,"value_required":false,"value_optional":false}]},{"name":"vendor:publish","description":"Publish any publishable assets from vendor packages","synopsis":"vendor:publish [--existing] [--force] [--all] [--provider [PROVIDER]] [--tag [TAG]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"existing","description":"Publish and overwrite only the files that have already been published","default":false,"value_required":false,"value_optional":false},{"name":"force","description":"Overwrite any existing files","default":false,"value_required":false,"value_optional":false},{"name":"all","description":"Publish assets for all service providers without prompt","default":false,"value_required":false,"value_optional":false},{"name":"provider","description":"The service provider that has assets you want to publish","default":null,"value_required":false,"value_optional":true},{"name":"tag","description":"One or many tags that have assets you want to publish","default":[],"value_required":false,"value_optional":true}]},{"name":"view:cache","description":"Compile all of the application's Blade templates","synopsis":"view:cache","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"view:clear","description":"Clear all compiled view files","synopsis":"view:clear","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"volt:install","description":"Install all of the Volt resources","synopsis":"volt:install","definition":{},"aliases":[],"arguments":[],"options":[]}]
