Psy Shell v0.9.12 (PHP 7.1.33-56+ubuntu22.04.1+deb.sury.org+1 — cli) by Justin Hileman
=> [
     "help" => Symfony\Component\Console\Command\HelpCommand {#294},
     "list" => Symfony\Component\Console\Command\ListCommand {#302},
     "dump-server" => BeyondCode\DumpServer\DumpServerCommand {#298},
     "cache:clear" => Illuminate\Cache\Console\ClearCommand {#312},
     "cache:forget" => Illuminate\Cache\Console\ForgetCommand {#316},
     "clear-compiled" => Illuminate\Foundation\Console\ClearCompiledCommand {#320},
     "auth:clear-resets" => Illuminate\Auth\Console\ClearResetsCommand {#322},
     "config:cache" => Illuminate\Foundation\Console\ConfigCacheCommand {#325},
     "config:clear" => Illuminate\Foundation\Console\ConfigClearCommand {#327},
     "down" => Illuminate\Foundation\Console\DownCommand {#329},
     "env" => Illuminate\Foundation\Console\EnvironmentCommand {#334},
     "event:cache" => Illuminate\Foundation\Console\EventCacheCommand {#336},
     "event:clear" => Illuminate\Foundation\Console\EventClearCommand {#338},
     "event:list" => Illuminate\Foundation\Console\EventListCommand {#340},
     "key:generate" => Illuminate\Foundation\Console\KeyGenerateCommand {#343},
     "migrate" => Illuminate\Database\Console\Migrations\MigrateCommand {#347},
     "migrate:fresh" => Illuminate\Database\Console\Migrations\FreshCommand {#358},
     "migrate:install" => Illuminate\Database\Console\Migrations\InstallCommand {#369},
     "migrate:refresh" => Illuminate\Database\Console\Migrations\RefreshCommand {#372},
     "migrate:reset" => Illuminate\Database\Console\Migrations\ResetCommand {#381},
     "migrate:rollback" => Illuminate\Database\Console\Migrations\RollbackCommand {#388},
     "migrate:status" => Illuminate\Database\Console\Migrations\StatusCommand {#396},
     "optimize" => Illuminate\Foundation\Console\OptimizeCommand {#401},
     "optimize:clear" => Illuminate\Foundation\Console\OptimizeClearCommand {#403},
     "package:discover" => Illuminate\Foundation\Console\PackageDiscoverCommand {#405},
     "preset" => Illuminate\Foundation\Console\PresetCommand {#407},
     "queue:failed" => Illuminate\Queue\Console\ListFailedCommand {#411},
     "queue:flush" => Illuminate\Queue\Console\FlushFailedCommand {#413},
     "queue:forget" => Illuminate\Queue\Console\ForgetFailedCommand {#415},
     "queue:listen" => Illuminate\Queue\Console\ListenCommand {#418},
     "queue:restart" => Illuminate\Queue\Console\RestartCommand {#430},
     "queue:retry" => Illuminate\Queue\Console\RetryCommand {#432},
     "queue:work" => Illuminate\Queue\Console\WorkCommand {#435},
     "route:cache" => Illuminate\Foundation\Console\RouteCacheCommand {#456},
     "route:clear" => Illuminate\Foundation\Console\RouteClearCommand {#458},
     "route:list" => Illuminate\Foundation\Console\RouteListCommand {#460},
     "db:seed" => Illuminate\Database\Console\Seeds\SeedCommand {#470},
     "schedule:finish" => Illuminate\Console\Scheduling\ScheduleFinishCommand {#478},
     "schedule:run" => Illuminate\Console\Scheduling\ScheduleRunCommand {#481},
     "storage:link" => Illuminate\Foundation\Console\StorageLinkCommand {#475},
     "up" => Illuminate\Foundation\Console\UpCommand {#477},
     "view:cache" => Illuminate\Foundation\Console\ViewCacheCommand {#485},
     "view:clear" => Illuminate\Foundation\Console\ViewClearCommand {#487},
     "app:name" => Illuminate\Foundation\Console\AppNameCommand {#489},
     "make:auth" => Illuminate\Auth\Console\AuthMakeCommand {#493},
     "cache:table" => Illuminate\Cache\Console\CacheTableCommand {#497},
     "make:channel" => Illuminate\Foundation\Console\ChannelMakeCommand {#499},
     "make:command" => Illuminate\Foundation\Console\ConsoleMakeCommand {#502},
     "make:controller" => Illuminate\Routing\Console\ControllerMakeCommand {#506},
     "event:generate" => Illuminate\Foundation\Console\EventGenerateCommand {#514},
     "make:event" => Illuminate\Foundation\Console\EventMakeCommand {#516},
     "make:exception" => Illuminate\Foundation\Console\ExceptionMakeCommand {#519},
     "make:factory" => Illuminate\Database\Console\Factories\FactoryMakeCommand {#524},
     "make:job" => Illuminate\Foundation\Console\JobMakeCommand {#528},
     "make:listener" => Illuminate\Foundation\Console\ListenerMakeCommand {#532},
     "make:mail" => Illuminate\Foundation\Console\MailMakeCommand {#537},
     "make:middleware" => Illuminate\Routing\Console\MiddlewareMakeCommand {#542},
     "make:migration" => Illuminate\Database\Console\Migrations\MigrateMakeCommand {#546},
     "make:model" => Illuminate\Foundation\Console\ModelMakeCommand {#554},
     "make:notification" => Illuminate\Foundation\Console\NotificationMakeCommand {#564},
     "notifications:table" => Illuminate\Notifications\Console\NotificationTableCommand {#569},
     "make:observer" => Illuminate\Foundation\Console\ObserverMakeCommand {#571},
     "make:policy" => Illuminate\Foundation\Console\PolicyMakeCommand {#575},
     "make:provider" => Illuminate\Foundation\Console\ProviderMakeCommand {#579},
     "queue:failed-table" => Illuminate\Queue\Console\FailedTableCommand {#582},
     "queue:table" => Illuminate\Queue\Console\TableCommand {#584},
     "make:request" => Illuminate\Foundation\Console\RequestMakeCommand {#586},
     "make:resource" => Illuminate\Foundation\Console\ResourceMakeCommand {#589},
     "make:rule" => Illuminate\Foundation\Console\RuleMakeCommand {#593},
     "make:seeder" => Illuminate\Database\Console\Seeds\SeederMakeCommand {#596},
     "session:table" => Illuminate\Session\Console\SessionTableCommand {#599},
     "serve" => Illuminate\Foundation\Console\ServeCommand {#601},
     "make:test" => Illuminate\Foundation\Console\TestMakeCommand {#606},
     "vendor:publish" => Illuminate\Foundation\Console\VendorPublishCommand {#610},
     "tinker" => Laravel\Tinker\Console\TinkerCommand {#616},
     "inspire" => Illuminate\Foundation\Console\ClosureCommand {#284},
   ]
[{"name":"app:name","description":"Set the application namespace","synopsis":"app:name <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The desired namespace","default":null,"required":true}],"options":[]},{"name":"auth:clear-resets","description":"Flush expired password reset tokens","synopsis":"auth:clear-resets [<name>]","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the password broker","default":null,"required":false}],"options":[]},{"name":"cache:clear","description":"Flush the application cache","synopsis":"cache:clear [--tags [TAGS]] [--] [<store>]","definition":{},"aliases":[],"arguments":[{"name":"store","description":"The name of the store you would like to clear","default":null,"required":false}],"options":[{"name":"tags","description":"The cache tags you would like to clear","value_required":false,"value_optional":true}]},{"name":"cache:forget","description":"Remove an item from the cache","synopsis":"cache:forget <key> [<store>]","definition":{},"aliases":[],"arguments":[{"name":"key","description":"The key to remove","default":null,"required":true},{"name":"store","description":"The store to remove the key from","default":null,"required":false}],"options":[]},{"name":"cache:table","description":"Create a migration for the cache database table","synopsis":"cache:table","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"clear-compiled","description":"Remove the compiled class file","synopsis":"clear-compiled","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"config:cache","description":"Create a cache file for faster configuration loading","synopsis":"config:cache","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"config:clear","description":"Remove the configuration cache file","synopsis":"config:clear","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"db:seed","description":"Seed the database with records","synopsis":"db:seed [--class [CLASS]] [--database [DATABASE]] [--force]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"class","description":"The class name of the root seeder","value_required":false,"value_optional":true},{"name":"database","description":"The database connection to seed","value_required":false,"value_optional":true},{"name":"force","description":"Force the operation to run when in production","value_required":false,"value_optional":false}]},{"name":"down","description":"Put the application into maintenance mode","synopsis":"down [--message [MESSAGE]] [--retry [RETRY]] [--allow [ALLOW]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"message","description":"The message for the maintenance mode","value_required":false,"value_optional":true},{"name":"retry","description":"The number of seconds after which the request may be retried","value_required":false,"value_optional":true},{"name":"allow","description":"IP or networks allowed to access the application while in maintenance mode","value_required":false,"value_optional":true}]},{"name":"dump-server","description":"Start the dump server to collect dump information.","synopsis":"dump-server [--format [FORMAT]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"format","description":"The output format (cli,html).","value_required":false,"value_optional":true}]},{"name":"env","description":"Display the current framework environment","synopsis":"env","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"event:cache","description":"Discover and cache the application's events and listeners","synopsis":"event:cache","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"event:clear","description":"Clear all cached events and listeners","synopsis":"event:clear","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"event:generate","description":"Generate the missing events and listeners based on registration","synopsis":"event:generate","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"event:list","description":"List the application's events and listeners","synopsis":"event:list [--event [EVENT]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"event","description":"Filter the events by name","value_required":false,"value_optional":true}]},{"name":"help","description":"Display help for a command","synopsis":"help [--format FORMAT] [--raw] [--] [<command_name>]","definition":{},"aliases":[],"arguments":[{"name":"command_name","description":"The command name","default":"help","required":false}],"options":[{"name":"format","description":"The output format (txt, xml, json, or md)","value_required":true,"value_optional":false},{"name":"raw","description":"To output raw command help","value_required":false,"value_optional":false}]},{"name":"inspire","description":"Display an inspiring quote","synopsis":"inspire","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"key:generate","description":"Set the application key","synopsis":"key:generate [--show] [--force]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"show","description":"Display the key instead of modifying files","value_required":false,"value_optional":false},{"name":"force","description":"Force the operation to run when in production","value_required":false,"value_optional":false}]},{"name":"list","description":"List commands","synopsis":"list [--raw] [--format FORMAT] [--] [<namespace>]","definition":{},"aliases":[],"arguments":[{"name":"namespace","description":"The namespace name","default":null,"required":false}],"options":[{"name":"raw","description":"To output raw command list","value_required":false,"value_optional":false},{"name":"format","description":"The output format (txt, xml, json, or md)","value_required":true,"value_optional":false}]},{"name":"make:auth","description":"Scaffold basic login and registration views and routes","synopsis":"make:auth [--views] [--force]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"views","description":"Only scaffold the authentication views","value_required":false,"value_optional":false},{"name":"force","description":"Overwrite existing views by default","value_required":false,"value_optional":false}]},{"name":"make:channel","description":"Create a new channel class","synopsis":"make:channel <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the class","default":null,"required":true}],"options":[]},{"name":"make:command","description":"Create a new Artisan command","synopsis":"make:command [--command [COMMAND]] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the command","default":null,"required":true}],"options":[{"name":"command","description":"The terminal command that should be assigned","value_required":false,"value_optional":true}]},{"name":"make:controller","description":"Create a new controller class","synopsis":"make:controller [-m|--model [MODEL]] [-r|--resource] [-i|--invokable] [-p|--parent [PARENT]] [--api] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the class","default":null,"required":true}],"options":[{"name":"model","description":"Generate a resource controller for the given model.","value_required":false,"value_optional":true},{"name":"resource","description":"Generate a resource controller class.","value_required":false,"value_optional":false},{"name":"invokable","description":"Generate a single method, invokable controller class.","value_required":false,"value_optional":false},{"name":"parent","description":"Generate a nested resource controller class.","value_required":false,"value_optional":true},{"name":"api","description":"Exclude the create and edit methods from the controller.","value_required":false,"value_optional":false}]},{"name":"make:event","description":"Create a new event class","synopsis":"make:event <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the class","default":null,"required":true}],"options":[]},{"name":"make:exception","description":"Create a new custom exception class","synopsis":"make:exception [--render] [--report] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the class","default":null,"required":true}],"options":[{"name":"render","description":"Create the exception with an empty render method","value_required":false,"value_optional":false},{"name":"report","description":"Create the exception with an empty report method","value_required":false,"value_optional":false}]},{"name":"make:factory","description":"Create a new model factory","synopsis":"make:factory [-m|--model [MODEL]] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the class","default":null,"required":true}],"options":[{"name":"model","description":"The name of the model","value_required":false,"value_optional":true}]},{"name":"make:job","description":"Create a new job class","synopsis":"make:job [--sync] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the class","default":null,"required":true}],"options":[{"name":"sync","description":"Indicates that job should be synchronous","value_required":false,"value_optional":false}]},{"name":"make:listener","description":"Create a new event listener class","synopsis":"make:listener [-e|--event [EVENT]] [--queued] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the class","default":null,"required":true}],"options":[{"name":"event","description":"The event class being listened for","value_required":false,"value_optional":true},{"name":"queued","description":"Indicates the event listener should be queued","value_required":false,"value_optional":false}]},{"name":"make:mail","description":"Create a new email class","synopsis":"make:mail [-f|--force] [-m|--markdown [MARKDOWN]] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the class","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the mailable already exists","value_required":false,"value_optional":false},{"name":"markdown","description":"Create a new Markdown template for the mailable","value_required":false,"value_optional":true}]},{"name":"make:middleware","description":"Create a new middleware class","synopsis":"make:middleware <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the class","default":null,"required":true}],"options":[]},{"name":"make:migration","description":"Create a new migration file","synopsis":"make:migration [--create [CREATE]] [--table [TABLE]] [--path [PATH]] [--realpath] [--fullpath] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the migration","default":null,"required":true}],"options":[{"name":"create","description":"The table to be created","value_required":false,"value_optional":true},{"name":"table","description":"The table to migrate","value_required":false,"value_optional":true},{"name":"path","description":"The location where the migration file should be created","value_required":false,"value_optional":true},{"name":"realpath","description":"Indicate any provided migration file paths are pre-resolved absolute paths","value_required":false,"value_optional":false},{"name":"fullpath","description":"Output the full path of the migration","value_required":false,"value_optional":false}]},{"name":"make:model","description":"Create a new Eloquent model class","synopsis":"make:model [-a|--all] [-c|--controller] [-f|--factory] [--force] [-m|--migration] [-p|--pivot] [-r|--resource] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the class","default":null,"required":true}],"options":[{"name":"all","description":"Generate a migration, factory, and resource controller for the model","value_required":false,"value_optional":false},{"name":"controller","description":"Create a new controller for the model","value_required":false,"value_optional":false},{"name":"factory","description":"Create a new factory for the model","value_required":false,"value_optional":false},{"name":"force","description":"Create the class even if the model already exists","value_required":false,"value_optional":false},{"name":"migration","description":"Create a new migration file for the model","value_required":false,"value_optional":false},{"name":"pivot","description":"Indicates if the generated model should be a custom intermediate table model","value_required":false,"value_optional":false},{"name":"resource","description":"Indicates if the generated controller should be a resource controller","value_required":false,"value_optional":false}]},{"name":"make:notification","description":"Create a new notification class","synopsis":"make:notification [-f|--force] [-m|--markdown [MARKDOWN]] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the class","default":null,"required":true}],"options":[{"name":"force","description":"Create the class even if the notification already exists","value_required":false,"value_optional":false},{"name":"markdown","description":"Create a new Markdown template for the notification","value_required":false,"value_optional":true}]},{"name":"make:observer","description":"Create a new observer class","synopsis":"make:observer [-m|--model [MODEL]] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the class","default":null,"required":true}],"options":[{"name":"model","description":"The model that the observer applies to.","value_required":false,"value_optional":true}]},{"name":"make:policy","description":"Create a new policy class","synopsis":"make:policy [-m|--model [MODEL]] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the class","default":null,"required":true}],"options":[{"name":"model","description":"The model that the policy applies to","value_required":false,"value_optional":true}]},{"name":"make:provider","description":"Create a new service provider class","synopsis":"make:provider <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the class","default":null,"required":true}],"options":[]},{"name":"make:request","description":"Create a new form request class","synopsis":"make:request <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the class","default":null,"required":true}],"options":[]},{"name":"make:resource","description":"Create a new resource","synopsis":"make:resource [-c|--collection] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the class","default":null,"required":true}],"options":[{"name":"collection","description":"Create a resource collection","value_required":false,"value_optional":false}]},{"name":"make:rule","description":"Create a new validation rule","synopsis":"make:rule <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the class","default":null,"required":true}],"options":[]},{"name":"make:seeder","description":"Create a new seeder class","synopsis":"make:seeder <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the class","default":null,"required":true}],"options":[]},{"name":"make:test","description":"Create a new test class","synopsis":"make:test [--unit] [--] <name>","definition":{},"aliases":[],"arguments":[{"name":"name","description":"The name of the class","default":null,"required":true}],"options":[{"name":"unit","description":"Create a unit test","value_required":false,"value_optional":false}]},{"name":"migrate","description":"Run the database migrations","synopsis":"migrate [--database [DATABASE]] [--force] [--path [PATH]] [--realpath] [--pretend] [--seed] [--step]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection to use","value_required":false,"value_optional":true},{"name":"force","description":"Force the operation to run when in production","value_required":false,"value_optional":false},{"name":"path","description":"The path(s) to the migrations files to be executed","value_required":false,"value_optional":true},{"name":"realpath","description":"Indicate any provided migration file paths are pre-resolved absolute paths","value_required":false,"value_optional":false},{"name":"pretend","description":"Dump the SQL queries that would be run","value_required":false,"value_optional":false},{"name":"seed","description":"Indicates if the seed task should be re-run","value_required":false,"value_optional":false},{"name":"step","description":"Force the migrations to be run so they can be rolled back individually","value_required":false,"value_optional":false}]},{"name":"migrate:fresh","description":"Drop all tables and re-run all migrations","synopsis":"migrate:fresh [--database [DATABASE]] [--drop-views] [--drop-types] [--force] [--path [PATH]] [--realpath] [--seed] [--seeder [SEEDER]] [--step]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection to use","value_required":false,"value_optional":true},{"name":"drop-views","description":"Drop all tables and views","value_required":false,"value_optional":false},{"name":"drop-types","description":"Drop all tables and types (Postgres only)","value_required":false,"value_optional":false},{"name":"force","description":"Force the operation to run when in production","value_required":false,"value_optional":false},{"name":"path","description":"The path to the migrations files to be executed","value_required":false,"value_optional":true},{"name":"realpath","description":"Indicate any provided migration file paths are pre-resolved absolute paths","value_required":false,"value_optional":false},{"name":"seed","description":"Indicates if the seed task should be re-run","value_required":false,"value_optional":false},{"name":"seeder","description":"The class name of the root seeder","value_required":false,"value_optional":true},{"name":"step","description":"Force the migrations to be run so they can be rolled back individually","value_required":false,"value_optional":false}]},{"name":"migrate:install","description":"Create the migration repository","synopsis":"migrate:install [--database [DATABASE]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection to use","value_required":false,"value_optional":true}]},{"name":"migrate:refresh","description":"Reset and re-run all migrations","synopsis":"migrate:refresh [--database [DATABASE]] [--force] [--path [PATH]] [--realpath] [--seed] [--seeder [SEEDER]] [--step [STEP]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection to use","value_required":false,"value_optional":true},{"name":"force","description":"Force the operation to run when in production","value_required":false,"value_optional":false},{"name":"path","description":"The path to the migrations files to be executed","value_required":false,"value_optional":true},{"name":"realpath","description":"Indicate any provided migration file paths are pre-resolved absolute paths","value_required":false,"value_optional":false},{"name":"seed","description":"Indicates if the seed task should be re-run","value_required":false,"value_optional":false},{"name":"seeder","description":"The class name of the root seeder","value_required":false,"value_optional":true},{"name":"step","description":"The number of migrations to be reverted & re-run","value_required":false,"value_optional":true}]},{"name":"migrate:reset","description":"Rollback all database migrations","synopsis":"migrate:reset [--database [DATABASE]] [--force] [--path [PATH]] [--realpath] [--pretend]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection to use","value_required":false,"value_optional":true},{"name":"force","description":"Force the operation to run when in production","value_required":false,"value_optional":false},{"name":"path","description":"The path(s) to the migrations files to be executed","value_required":false,"value_optional":true},{"name":"realpath","description":"Indicate any provided migration file paths are pre-resolved absolute paths","value_required":false,"value_optional":false},{"name":"pretend","description":"Dump the SQL queries that would be run","value_required":false,"value_optional":false}]},{"name":"migrate:rollback","description":"Rollback the last database migration","synopsis":"migrate:rollback [--database [DATABASE]] [--force] [--path [PATH]] [--realpath] [--pretend] [--step [STEP]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection to use","value_required":false,"value_optional":true},{"name":"force","description":"Force the operation to run when in production","value_required":false,"value_optional":false},{"name":"path","description":"The path(s) to the migrations files to be executed","value_required":false,"value_optional":true},{"name":"realpath","description":"Indicate any provided migration file paths are pre-resolved absolute paths","value_required":false,"value_optional":false},{"name":"pretend","description":"Dump the SQL queries that would be run","value_required":false,"value_optional":false},{"name":"step","description":"The number of migrations to be reverted","value_required":false,"value_optional":true}]},{"name":"migrate:status","description":"Show the status of each migration","synopsis":"migrate:status [--database [DATABASE]] [--path [PATH]] [--realpath]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"database","description":"The database connection to use","value_required":false,"value_optional":true},{"name":"path","description":"The path(s) to the migrations files to use","value_required":false,"value_optional":true},{"name":"realpath","description":"Indicate any provided migration file paths are pre-resolved absolute paths","value_required":false,"value_optional":false}]},{"name":"notifications:table","description":"Create a migration for the notifications table","synopsis":"notifications:table","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"optimize","description":"Cache the framework bootstrap files","synopsis":"optimize","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"optimize:clear","description":"Remove the cached bootstrap files","synopsis":"optimize:clear","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"package:discover","description":"Rebuild the cached package manifest","synopsis":"package:discover","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"preset","description":"Swap the front-end scaffolding for the application","synopsis":"preset [--option [OPTION]] [--] <type>","definition":{},"aliases":[],"arguments":[{"name":"type","description":"The preset type (none, bootstrap, vue, react)","default":null,"required":true}],"options":[{"name":"option","description":"Pass an option to the preset command","value_required":false,"value_optional":true}]},{"name":"queue:failed","description":"List all of the failed queue jobs","synopsis":"queue:failed","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"queue:failed-table","description":"Create a migration for the failed queue jobs database table","synopsis":"queue:failed-table","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"queue:flush","description":"Flush all of the failed queue jobs","synopsis":"queue:flush","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"queue:forget","description":"Delete a failed queue job","synopsis":"queue:forget <id>","definition":{},"aliases":[],"arguments":[{"name":"id","description":"The ID of the failed job","default":null,"required":true}],"options":[]},{"name":"queue:listen","description":"Listen to a given queue","synopsis":"queue:listen [--delay [DELAY]] [--force] [--memory [MEMORY]] [--queue [QUEUE]] [--sleep [SLEEP]] [--timeout [TIMEOUT]] [--tries [TRIES]] [--] [<connection>]","definition":{},"aliases":[],"arguments":[{"name":"connection","description":"The name of connection","default":null,"required":false}],"options":[{"name":"delay","description":"The number of seconds to delay failed jobs","value_required":false,"value_optional":true},{"name":"force","description":"Force the worker to run even in maintenance mode","value_required":false,"value_optional":false},{"name":"memory","description":"The memory limit in megabytes","value_required":false,"value_optional":true},{"name":"queue","description":"The queue to listen on","value_required":false,"value_optional":true},{"name":"sleep","description":"Number of seconds to sleep when no job is available","value_required":false,"value_optional":true},{"name":"timeout","description":"The number of seconds a child process can run","value_required":false,"value_optional":true},{"name":"tries","description":"Number of times to attempt a job before logging it failed","value_required":false,"value_optional":true}]},{"name":"queue:restart","description":"Restart queue worker daemons after their current job","synopsis":"queue:restart","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"queue:retry","description":"Retry a failed queue job","synopsis":"queue:retry <id>...","definition":{},"aliases":[],"arguments":[{"name":"id","description":"The ID of the failed job or \"all\" to retry all jobs","default":[],"required":true}],"options":[]},{"name":"queue:table","description":"Create a migration for the queue jobs database table","synopsis":"queue:table","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"queue:work","description":"Start processing jobs on the queue as a daemon","synopsis":"queue:work [--queue [QUEUE]] [--daemon] [--once] [--stop-when-empty] [--delay [DELAY]] [--force] [--memory [MEMORY]] [--sleep [SLEEP]] [--timeout [TIMEOUT]] [--tries [TRIES]] [--] [<connection>]","definition":{},"aliases":[],"arguments":[{"name":"connection","description":"The name of the queue connection to work","default":null,"required":false}],"options":[{"name":"queue","description":"The names of the queues to work","value_required":false,"value_optional":true},{"name":"daemon","description":"Run the worker in daemon mode (Deprecated)","value_required":false,"value_optional":false},{"name":"once","description":"Only process the next job on the queue","value_required":false,"value_optional":false},{"name":"stop-when-empty","description":"Stop when the queue is empty","value_required":false,"value_optional":false},{"name":"delay","description":"The number of seconds to delay failed jobs","value_required":false,"value_optional":true},{"name":"force","description":"Force the worker to run even in maintenance mode","value_required":false,"value_optional":false},{"name":"memory","description":"The memory limit in megabytes","value_required":false,"value_optional":true},{"name":"sleep","description":"Number of seconds to sleep when no job is available","value_required":false,"value_optional":true},{"name":"timeout","description":"The number of seconds a child process can run","value_required":false,"value_optional":true},{"name":"tries","description":"Number of times to attempt a job before logging it failed","value_required":false,"value_optional":true}]},{"name":"route:cache","description":"Create a route cache file for faster route registration","synopsis":"route:cache","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"route:clear","description":"Remove the route cache file","synopsis":"route:clear","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"route:list","description":"List all registered routes","synopsis":"route:list [--columns [COLUMNS]] [-c|--compact] [--json] [--method [METHOD]] [--name [NAME]] [--path [PATH]] [-r|--reverse] [--sort [SORT]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"columns","description":"Columns to include in the route table","value_required":false,"value_optional":true},{"name":"compact","description":"Only show method, URI and action columns","value_required":false,"value_optional":false},{"name":"json","description":"Output the route list as JSON","value_required":false,"value_optional":false},{"name":"method","description":"Filter the routes by method","value_required":false,"value_optional":true},{"name":"name","description":"Filter the routes by name","value_required":false,"value_optional":true},{"name":"path","description":"Filter the routes by path","value_required":false,"value_optional":true},{"name":"reverse","description":"Reverse the ordering of the routes","value_required":false,"value_optional":false},{"name":"sort","description":"The column (domain, method, uri, name, action, middleware) to sort by","value_required":false,"value_optional":true}]},{"name":"schedule:finish","description":"Handle the completion of a scheduled command","synopsis":"schedule:finish <id>","definition":{},"aliases":[],"arguments":[{"name":"id","description":"","default":null,"required":true}],"options":[]},{"name":"schedule:run","description":"Run the scheduled commands","synopsis":"schedule:run","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"serve","description":"Serve the application on the PHP development server","synopsis":"serve [--host [HOST]] [--port [PORT]] [--tries [TRIES]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"host","description":"The host address to serve the application on","value_required":false,"value_optional":true},{"name":"port","description":"The port to serve the application on","value_required":false,"value_optional":true},{"name":"tries","description":"The max number of ports to attempt to serve from","value_required":false,"value_optional":true}]},{"name":"session:table","description":"Create a migration for the session database table","synopsis":"session:table","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"storage:link","description":"Create a symbolic link from \"public\/storage\" to \"storage\/app\/public\"","synopsis":"storage:link","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"tinker","description":"Interact with your application","synopsis":"tinker [<include>...]","definition":{},"aliases":[],"arguments":[{"name":"command","description":"The command to execute","default":null,"required":true},{"name":"include","description":"Include file(s) before starting tinker","default":[],"required":false}],"options":[{"name":"help","description":"Display this help message","value_required":false,"value_optional":false},{"name":"quiet","description":"Do not output any message","value_required":false,"value_optional":false},{"name":"verbose","description":"Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug","value_required":false,"value_optional":false},{"name":"version","description":"Display this application version","value_required":false,"value_optional":false},{"name":"ansi","description":"Force ANSI output","value_required":false,"value_optional":false},{"name":"no-ansi","description":"Disable ANSI output","value_required":false,"value_optional":false},{"name":"no-interaction","description":"Do not ask any interactive question","value_required":false,"value_optional":false},{"name":"env","description":"The environment the command should run under","value_required":false,"value_optional":true}]},{"name":"up","description":"Bring the application out of maintenance mode","synopsis":"up","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"vendor:publish","description":"Publish any publishable assets from vendor packages","synopsis":"vendor:publish [--force] [--all] [--provider [PROVIDER]] [--tag [TAG]]","definition":{},"aliases":[],"arguments":[],"options":[{"name":"force","description":"Overwrite any existing files","value_required":false,"value_optional":false},{"name":"all","description":"Publish assets for all service providers without prompt","value_required":false,"value_optional":false},{"name":"provider","description":"The service provider that has assets you want to publish","value_required":false,"value_optional":true},{"name":"tag","description":"One or many tags that have assets you want to publish","value_required":false,"value_optional":true}]},{"name":"view:cache","description":"Compile all of the application's Blade templates","synopsis":"view:cache","definition":{},"aliases":[],"arguments":[],"options":[]},{"name":"view:clear","description":"Clear all compiled view files","synopsis":"view:clear","definition":{},"aliases":[],"arguments":[],"options":[]}]⏎

Exit:  Ctrl+D
